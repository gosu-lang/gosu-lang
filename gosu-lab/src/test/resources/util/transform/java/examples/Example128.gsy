package gw.util.transform.java.Examples

uses java.util.*

class Time implements Comparable<Time> {

    public final var hh : int
    public final var mm : int
    public construct(hh_0 : int, mm_0 : int) {
        this.hh = hh_0
        this.mm = mm_0
    }

    public function compareTo(t : Time) : int {
        return hh != t.hh ? hh - t.hh : mm - t.mm
    }

    public function equals(o : Object) : boolean {
        if (this == o) {
            return true
        }
        if (o == null or this.getClass() != o.getClass()) {
            return false
        }
        var t : Time = o as Time
        return hh == t.hh and mm == t.mm
    }

    public function hashCode() : int {
        return 60 * hh + mm
    }

    public function toString() : String {
        return (hh < 10 ? "0" + hh : "" + hh) + ":" + (mm < 10 ? "0" + mm : "" + mm)
    }

}
class TimeComparator implements Comparator<Time> {

    public function compare(t1 : Time, t2 : Time) : int {
        return t1.hh != t2.hh ? t1.hh - t2.hh : t1.mm - t2.mm
    }

}
class Example128  {

    public static function main(args : String[]) : void {
        var datebook : SortedMap<Time, String> = new TreeMap<Time, String>()
        datebook.put(new Time(12, 30), "Lunch")
        datebook.put(new Time(15, 30), "Afternoon coffee break")
        datebook.put(new Time(9, 0), "Lecture")
        datebook.put(new Time(13, 15), "Board meeting")
        var pm : SortedMap<Time, String> = datebook.tailMap(new Time(12, 0))
        for (entry in pm.entrySet()) {
            System.out.println(entry.getKey() + " " + entry.getValue())
        }

    }

}
