package gw.spec.core.expressions.arithmetic.subtraction

uses gw.spec.core.expressions.arithmetic.ArithmeticTestBase

uses gw.util.Rational

class Subtraction_RationalTest extends ArithmeticTestBase {

  function testRationalPByteSubtraction() {
    assertEquals(rational("0"), rational("0") - p_byte(0))
    assertEquals(rational("-23"), rational("0") - p_byte(23))
    assertEquals(rational("32"), rational("0") - p_byte(-32))
    assertEquals(rational("-127"), rational("0") - p_byte(Byte.MAX_VALUE))
    assertEquals(rational("128"), rational("0") - p_byte(Byte.MIN_VALUE))

    assertEquals(rational("23"), rational("23") - p_byte(0))
    assertEquals(rational("0"), rational("23") - p_byte(23))
    assertEquals(rational("55"), rational("23") - p_byte(-32))
    assertEquals(rational("-104"), rational("23") - p_byte(Byte.MAX_VALUE))
    assertEquals(rational("151"), rational("23") - p_byte(Byte.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - p_byte(0))
    assertEquals(rational("0.123"), rational("23.123") - p_byte(23))
    assertEquals(rational("55.123"), rational("23.123") - p_byte(-32))
    assertEquals(rational("-103.877"), rational("23.123") - p_byte(Byte.MAX_VALUE))
    assertEquals(rational("151.123"), rational("23.123") - p_byte(Byte.MIN_VALUE))

    assertEquals(rational("-32"), rational("-32") - p_byte(0))
    assertEquals(rational("-55"), rational("-32") - p_byte(23))
    assertEquals(rational("0"), rational("-32") - p_byte(-32))
    assertEquals(rational("-159"), rational("-32") - p_byte(Byte.MAX_VALUE))
    assertEquals(rational("96"), rational("-32") - p_byte(Byte.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - p_byte(0))
    assertEquals(rational("-55.456"), rational("-32.456") - p_byte(23))
    assertEquals(rational("-0.456"), rational("-32.456") - p_byte(-32))
    assertEquals(rational("-159.456"), rational("-32.456") - p_byte(Byte.MAX_VALUE))
    assertEquals(rational("95.544"), rational("-32.456") - p_byte(Byte.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - p_byte(0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - p_byte(23))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - p_byte(-32))
    assertEquals(rational("123456789012345678901234567763.123456789"), rational("123456789012345678901234567890.123456789") - p_byte(Byte.MAX_VALUE))
    assertEquals(rational("123456789012345678901234568018.123456789"), rational("123456789012345678901234567890.123456789") - p_byte(Byte.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - p_byte(0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - p_byte(23))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - p_byte(-32))
    assertEquals(rational("-123456789012345678901234568017.123456789"), rational("-123456789012345678901234567890.123456789") - p_byte(Byte.MAX_VALUE))
    assertEquals(rational("-123456789012345678901234567762.123456789"), rational("-123456789012345678901234567890.123456789") - p_byte(Byte.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - p_byte(0)))
  }

  function testRationalByteSubtraction() {
    assertEquals(rational("0"), rational("0") - b_byte(0))
    assertEquals(rational("-23"), rational("0") - b_byte(23))
    assertEquals(rational("32"), rational("0") - b_byte(-32))
    assertEquals(rational("-127"), rational("0") - b_byte(Byte.MAX_VALUE))
    assertEquals(rational("128"), rational("0") - b_byte(Byte.MIN_VALUE))

    assertEquals(rational("23"), rational("23") - b_byte(0))
    assertEquals(rational("0"), rational("23") - b_byte(23))
    assertEquals(rational("55"), rational("23") - b_byte(-32))
    assertEquals(rational("-104"), rational("23") - b_byte(Byte.MAX_VALUE))
    assertEquals(rational("151"), rational("23") - b_byte(Byte.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - b_byte(0))
    assertEquals(rational("0.123"), rational("23.123") - b_byte(23))
    assertEquals(rational("55.123"), rational("23.123") - b_byte(-32))
    assertEquals(rational("-103.877"), rational("23.123") - b_byte(Byte.MAX_VALUE))
    assertEquals(rational("151.123"), rational("23.123") - b_byte(Byte.MIN_VALUE))

    assertEquals(rational("-32"), rational("-32") - b_byte(0))
    assertEquals(rational("-55"), rational("-32") - b_byte(23))
    assertEquals(rational("0"), rational("-32") - b_byte(-32))
    assertEquals(rational("-159"), rational("-32") - b_byte(Byte.MAX_VALUE))
    assertEquals(rational("96"), rational("-32") - b_byte(Byte.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - b_byte(0))
    assertEquals(rational("-55.456"), rational("-32.456") - b_byte(23))
    assertEquals(rational("-0.456"), rational("-32.456") - b_byte(-32))
    assertEquals(rational("-159.456"), rational("-32.456") - b_byte(Byte.MAX_VALUE))
    assertEquals(rational("95.544"), rational("-32.456") - b_byte(Byte.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - b_byte(0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - b_byte(23))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - b_byte(-32))
    assertEquals(rational("123456789012345678901234567763.123456789"), rational("123456789012345678901234567890.123456789") - b_byte(Byte.MAX_VALUE))
    assertEquals(rational("123456789012345678901234568018.123456789"), rational("123456789012345678901234567890.123456789") - b_byte(Byte.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - b_byte(0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - b_byte(23))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - b_byte(-32))
    assertEquals(rational("-123456789012345678901234568017.123456789"), rational("-123456789012345678901234567890.123456789") - b_byte(Byte.MAX_VALUE))
    assertEquals(rational("-123456789012345678901234567762.123456789"), rational("-123456789012345678901234567890.123456789") - b_byte(Byte.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - b_byte(0)))
  }

  function testRationalPShortSubtraction() {
    assertEquals(rational("0"), rational("0") - p_short(0))
    assertEquals(rational("-23"), rational("0") - p_short(23))
    assertEquals(rational("32"), rational("0") - p_short(-32))
    assertEquals(rational("-32767"), rational("0") - p_short(Short.MAX_VALUE))
    assertEquals(rational("32768"), rational("0") - p_short(Short.MIN_VALUE))

    assertEquals(rational("23"), rational("23") - p_short(0))
    assertEquals(rational("0"), rational("23") - p_short(23))
    assertEquals(rational("55"), rational("23") - p_short(-32))
    assertEquals(rational("-32744"), rational("23") - p_short(Short.MAX_VALUE))
    assertEquals(rational("32791"), rational("23") - p_short(Short.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - p_short(0))
    assertEquals(rational("0.123"), rational("23.123") - p_short(23))
    assertEquals(rational("55.123"), rational("23.123") - p_short(-32))
    assertEquals(rational("-32743.877"), rational("23.123") - p_short(Short.MAX_VALUE))
    assertEquals(rational("32791.123"), rational("23.123") - p_short(Short.MIN_VALUE))

    assertEquals(rational("-32"), rational("-32") - p_short(0))
    assertEquals(rational("-55"), rational("-32") - p_short(23))
    assertEquals(rational("0"), rational("-32") - p_short(-32))
    assertEquals(rational("-32799"), rational("-32") - p_short(Short.MAX_VALUE))
    assertEquals(rational("32736"), rational("-32") - p_short(Short.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - p_short(0))
    assertEquals(rational("-55.456"), rational("-32.456") - p_short(23))
    assertEquals(rational("-0.456"), rational("-32.456") - p_short(-32))
    assertEquals(rational("-32799.456"), rational("-32.456") - p_short(Short.MAX_VALUE))
    assertEquals(rational("32735.544"), rational("-32.456") - p_short(Short.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - p_short(0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - p_short(23))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - p_short(-32))
    assertEquals(rational("123456789012345678901234535123.123456789"), rational("123456789012345678901234567890.123456789") - p_short(Short.MAX_VALUE))
    assertEquals(rational("123456789012345678901234600658.123456789"), rational("123456789012345678901234567890.123456789") - p_short(Short.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - p_short(0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - p_short(23))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - p_short(-32))
    assertEquals(rational("-123456789012345678901234600657.123456789"), rational("-123456789012345678901234567890.123456789") - p_short(Short.MAX_VALUE))
    assertEquals(rational("-123456789012345678901234535122.123456789"), rational("-123456789012345678901234567890.123456789") - p_short(Short.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - p_short(0)))
  }

  function testRationalShortSubtraction() {
    assertEquals(rational("0"), rational("0") - b_short(0))
    assertEquals(rational("-23"), rational("0") - b_short(23))
    assertEquals(rational("32"), rational("0") - b_short(-32))
    assertEquals(rational("-32767"), rational("0") - b_short(Short.MAX_VALUE))
    assertEquals(rational("32768"), rational("0") - b_short(Short.MIN_VALUE))

    assertEquals(rational("23"), rational("23") - b_short(0))
    assertEquals(rational("0"), rational("23") - b_short(23))
    assertEquals(rational("55"), rational("23") - b_short(-32))
    assertEquals(rational("-32744"), rational("23") - b_short(Short.MAX_VALUE))
    assertEquals(rational("32791"), rational("23") - b_short(Short.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - b_short(0))
    assertEquals(rational("0.123"), rational("23.123") - b_short(23))
    assertEquals(rational("55.123"), rational("23.123") - b_short(-32))
    assertEquals(rational("-32743.877"), rational("23.123") - b_short(Short.MAX_VALUE))
    assertEquals(rational("32791.123"), rational("23.123") - b_short(Short.MIN_VALUE))

    assertEquals(rational("-32"), rational("-32") - b_short(0))
    assertEquals(rational("-55"), rational("-32") - b_short(23))
    assertEquals(rational("0"), rational("-32") - b_short(-32))
    assertEquals(rational("-32799"), rational("-32") - b_short(Short.MAX_VALUE))
    assertEquals(rational("32736"), rational("-32") - b_short(Short.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - b_short(0))
    assertEquals(rational("-55.456"), rational("-32.456") - b_short(23))
    assertEquals(rational("-0.456"), rational("-32.456") - b_short(-32))
    assertEquals(rational("-32799.456"), rational("-32.456") - b_short(Short.MAX_VALUE))
    assertEquals(rational("32735.544"), rational("-32.456") - b_short(Short.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - b_short(0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - b_short(23))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - b_short(-32))
    assertEquals(rational("123456789012345678901234535123.123456789"), rational("123456789012345678901234567890.123456789") - b_short(Short.MAX_VALUE))
    assertEquals(rational("123456789012345678901234600658.123456789"), rational("123456789012345678901234567890.123456789") - b_short(Short.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - b_short(0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - b_short(23))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - b_short(-32))
    assertEquals(rational("-123456789012345678901234600657.123456789"), rational("-123456789012345678901234567890.123456789") - b_short(Short.MAX_VALUE))
    assertEquals(rational("-123456789012345678901234535122.123456789"), rational("-123456789012345678901234567890.123456789") - b_short(Short.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - b_short(0)))
  }

  function testRationalPCharSubtraction() {
    assertEquals(rational("0"), rational("0") - p_char(0))
    assertEquals(rational("-23"), rational("0") - p_char(23))
    assertEquals(rational("-65535"), rational("0") - p_char(Character.MAX_VALUE))

    assertEquals(rational("23"), rational("23") - p_char(0))
    assertEquals(rational("0"), rational("23") - p_char(23))
    assertEquals(rational("-65512"), rational("23") - p_char(Character.MAX_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - p_char(0))
    assertEquals(rational("0.123"), rational("23.123") - p_char(23))
    assertEquals(rational("-65511.877"), rational("23.123") - p_char(Character.MAX_VALUE))

    assertEquals(rational("-32"), rational("-32") - p_char(0))
    assertEquals(rational("-55"), rational("-32") - p_char(23))
    assertEquals(rational("-65567"), rational("-32") - p_char(Character.MAX_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - p_char(0))
    assertEquals(rational("-55.456"), rational("-32.456") - p_char(23))
    assertEquals(rational("-65567.456"), rational("-32.456") - p_char(Character.MAX_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - p_char(0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - p_char(23))
    assertEquals(rational("123456789012345678901234502355.123456789"), rational("123456789012345678901234567890.123456789") - p_char(Character.MAX_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - p_char(0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - p_char(23))
    assertEquals(rational("-123456789012345678901234633425.123456789"), rational("-123456789012345678901234567890.123456789") - p_char(Character.MAX_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - p_char(0)))
  }

  function testRationalCharacterSubtraction() {
    assertEquals(rational("0"), rational("0") - b_char(0))
    assertEquals(rational("-23"), rational("0") - b_char(23))
    assertEquals(rational("-65535"), rational("0") - b_char(Character.MAX_VALUE))

    assertEquals(rational("23"), rational("23") - b_char(0))
    assertEquals(rational("0"), rational("23") - b_char(23))
    assertEquals(rational("-65512"), rational("23") - b_char(Character.MAX_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - b_char(0))
    assertEquals(rational("0.123"), rational("23.123") - b_char(23))
    assertEquals(rational("-65511.877"), rational("23.123") - b_char(Character.MAX_VALUE))

    assertEquals(rational("-32"), rational("-32") - b_char(0))
    assertEquals(rational("-55"), rational("-32") - b_char(23))
    assertEquals(rational("-65567"), rational("-32") - b_char(Character.MAX_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - b_char(0))
    assertEquals(rational("-55.456"), rational("-32.456") - b_char(23))
    assertEquals(rational("-65567.456"), rational("-32.456") - b_char(Character.MAX_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - b_char(0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - b_char(23))
    assertEquals(rational("123456789012345678901234502355.123456789"), rational("123456789012345678901234567890.123456789") - b_char(Character.MAX_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - b_char(0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - b_char(23))
    assertEquals(rational("-123456789012345678901234633425.123456789"), rational("-123456789012345678901234567890.123456789") - b_char(Character.MAX_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - b_char(0)))
  }

  function testRationalPIntSubtraction() {
    assertEquals(rational("0"), rational("0") - p_int(0))
    assertEquals(rational("-23"), rational("0") - p_int(23))
    assertEquals(rational("32"), rational("0") - p_int(-32))
    assertEquals(rational("-2147483647"), rational("0") - p_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483648"), rational("0") - p_int(Integer.MIN_VALUE))

    assertEquals(rational("23"), rational("23") - p_int(0))
    assertEquals(rational("0"), rational("23") - p_int(23))
    assertEquals(rational("55"), rational("23") - p_int(-32))
    assertEquals(rational("-2147483624"), rational("23") - p_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483671"), rational("23") - p_int(Integer.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - p_int(0))
    assertEquals(rational("0.123"), rational("23.123") - p_int(23))
    assertEquals(rational("55.123"), rational("23.123") - p_int(-32))
    assertEquals(rational("-2147483623.877"), rational("23.123") - p_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483671.123"), rational("23.123") - p_int(Integer.MIN_VALUE))

    assertEquals(rational("-32"), rational("-32") - p_int(0))
    assertEquals(rational("-55"), rational("-32") - p_int(23))
    assertEquals(rational("0"), rational("-32") - p_int(-32))
    assertEquals(rational("-2147483679"), rational("-32") - p_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483616"), rational("-32") - p_int(Integer.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - p_int(0))
    assertEquals(rational("-55.456"), rational("-32.456") - p_int(23))
    assertEquals(rational("-0.456"), rational("-32.456") - p_int(-32))
    assertEquals(rational("-2147483679.456"), rational("-32.456") - p_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483615.544"), rational("-32.456") - p_int(Integer.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - p_int(0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - p_int(23))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - p_int(-32))
    assertEquals(rational("123456789012345678899087084243.123456789"), rational("123456789012345678901234567890.123456789") - p_int(Integer.MAX_VALUE))
    assertEquals(rational("123456789012345678903382051538.123456789"), rational("123456789012345678901234567890.123456789") - p_int(Integer.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - p_int(0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - p_int(23))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - p_int(-32))
    assertEquals(rational("-123456789012345678903382051537.123456789"), rational("-123456789012345678901234567890.123456789") - p_int(Integer.MAX_VALUE))
    assertEquals(rational("-123456789012345678899087084242.123456789"), rational("-123456789012345678901234567890.123456789") - p_int(Integer.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - p_int(0)))
  }

  function testRationalIntegerSubtraction() {
    assertEquals(rational("0"), rational("0") - b_int(0))
    assertEquals(rational("-23"), rational("0") - b_int(23))
    assertEquals(rational("32"), rational("0") - b_int(-32))
    assertEquals(rational("-2147483647"), rational("0") - b_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483648"), rational("0") - b_int(Integer.MIN_VALUE))

    assertEquals(rational("23"), rational("23") - b_int(0))
    assertEquals(rational("0"), rational("23") - b_int(23))
    assertEquals(rational("55"), rational("23") - b_int(-32))
    assertEquals(rational("-2147483624"), rational("23") - b_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483671"), rational("23") - b_int(Integer.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - b_int(0))
    assertEquals(rational("0.123"), rational("23.123") - b_int(23))
    assertEquals(rational("55.123"), rational("23.123") - b_int(-32))
    assertEquals(rational("-2147483623.877"), rational("23.123") - b_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483671.123"), rational("23.123") - b_int(Integer.MIN_VALUE))

    assertEquals(rational("-32"), rational("-32") - b_int(0))
    assertEquals(rational("-55"), rational("-32") - b_int(23))
    assertEquals(rational("0"), rational("-32") - b_int(-32))
    assertEquals(rational("-2147483679"), rational("-32") - b_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483616"), rational("-32") - b_int(Integer.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - b_int(0))
    assertEquals(rational("-55.456"), rational("-32.456") - b_int(23))
    assertEquals(rational("-0.456"), rational("-32.456") - b_int(-32))
    assertEquals(rational("-2147483679.456"), rational("-32.456") - b_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483615.544"), rational("-32.456") - b_int(Integer.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - b_int(0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - b_int(23))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - b_int(-32))
    assertEquals(rational("123456789012345678899087084243.123456789"), rational("123456789012345678901234567890.123456789") - b_int(Integer.MAX_VALUE))
    assertEquals(rational("123456789012345678903382051538.123456789"), rational("123456789012345678901234567890.123456789") - b_int(Integer.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - b_int(0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - b_int(23))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - b_int(-32))
    assertEquals(rational("-123456789012345678903382051537.123456789"), rational("-123456789012345678901234567890.123456789") - b_int(Integer.MAX_VALUE))
    assertEquals(rational("-123456789012345678899087084242.123456789"), rational("-123456789012345678901234567890.123456789") - b_int(Integer.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - b_int(0)))
  }

  function testRationalPLongSubtraction() {
    assertEquals(rational("0"), rational("0") - p_long(0))
    assertEquals(rational("-23"), rational("0") - p_long(23))
    assertEquals(rational("32"), rational("0") - p_long(-32))
    assertEquals(rational("-9223372036854775807"), rational("0") - p_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775808"), rational("0") - p_long(Long.MIN_VALUE))

    assertEquals(rational("23"), rational("23") - p_long(0))
    assertEquals(rational("0"), rational("23") - p_long(23))
    assertEquals(rational("55"), rational("23") - p_long(-32))
    assertEquals(rational("-9223372036854775784"), rational("23") - p_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775831"), rational("23") - p_long(Long.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - p_long(0))
    assertEquals(rational("0.123"), rational("23.123") - p_long(23))
    assertEquals(rational("55.123"), rational("23.123") - p_long(-32))
    assertEquals(rational("-9223372036854775783.877"), rational("23.123") - p_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775831.123"), rational("23.123") - p_long(Long.MIN_VALUE))

    assertEquals(rational("-32"), rational("-32") - p_long(0))
    assertEquals(rational("-55"), rational("-32") - p_long(23))
    assertEquals(rational("0"), rational("-32") - p_long(-32))
    assertEquals(rational("-9223372036854775839"), rational("-32") - p_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775776"), rational("-32") - p_long(Long.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - p_long(0))
    assertEquals(rational("-55.456"), rational("-32.456") - p_long(23))
    assertEquals(rational("-0.456"), rational("-32.456") - p_long(-32))
    assertEquals(rational("-9223372036854775839.456"), rational("-32.456") - p_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775775.544"), rational("-32.456") - p_long(Long.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - p_long(0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - p_long(23))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - p_long(-32))
    assertEquals(rational("123456789003122306864379792083.123456789"), rational("123456789012345678901234567890.123456789") - p_long(Long.MAX_VALUE))
    assertEquals(rational("123456789021569050938089343698.123456789"), rational("123456789012345678901234567890.123456789") - p_long(Long.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - p_long(0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - p_long(23))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - p_long(-32))
    assertEquals(rational("-123456789021569050938089343697.123456789"), rational("-123456789012345678901234567890.123456789") - p_long(Long.MAX_VALUE))
    assertEquals(rational("-123456789003122306864379792082.123456789"), rational("-123456789012345678901234567890.123456789") - p_long(Long.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - p_long(0)))
  }

  function testRationalLongSubtraction() {
    assertEquals(rational("0"), rational("0") - b_long(0))
    assertEquals(rational("-23"), rational("0") - b_long(23))
    assertEquals(rational("32"), rational("0") - b_long(-32))
    assertEquals(rational("-9223372036854775807"), rational("0") - b_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775808"), rational("0") - b_long(Long.MIN_VALUE))

    assertEquals(rational("23"), rational("23") - b_long(0))
    assertEquals(rational("0"), rational("23") - b_long(23))
    assertEquals(rational("55"), rational("23") - b_long(-32))
    assertEquals(rational("-9223372036854775784"), rational("23") - b_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775831"), rational("23") - b_long(Long.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - b_long(0))
    assertEquals(rational("0.123"), rational("23.123") - b_long(23))
    assertEquals(rational("55.123"), rational("23.123") - b_long(-32))
    assertEquals(rational("-9223372036854775783.877"), rational("23.123") - b_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775831.123"), rational("23.123") - b_long(Long.MIN_VALUE))

    assertEquals(rational("-32"), rational("-32") - b_long(0))
    assertEquals(rational("-55"), rational("-32") - b_long(23))
    assertEquals(rational("0"), rational("-32") - b_long(-32))
    assertEquals(rational("-9223372036854775839"), rational("-32") - b_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775776"), rational("-32") - b_long(Long.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - b_long(0))
    assertEquals(rational("-55.456"), rational("-32.456") - b_long(23))
    assertEquals(rational("-0.456"), rational("-32.456") - b_long(-32))
    assertEquals(rational("-9223372036854775839.456"), rational("-32.456") - b_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775775.544"), rational("-32.456") - b_long(Long.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - b_long(0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - b_long(23))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - b_long(-32))
    assertEquals(rational("123456789003122306864379792083.123456789"), rational("123456789012345678901234567890.123456789") - b_long(Long.MAX_VALUE))
    assertEquals(rational("123456789021569050938089343698.123456789"), rational("123456789012345678901234567890.123456789") - b_long(Long.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - b_long(0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - b_long(23))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - b_long(-32))
    assertEquals(rational("-123456789021569050938089343697.123456789"), rational("-123456789012345678901234567890.123456789") - b_long(Long.MAX_VALUE))
    assertEquals(rational("-123456789003122306864379792082.123456789"), rational("-123456789012345678901234567890.123456789") - b_long(Long.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - b_long(0)))
  }

  function testRationalPFloatSubtraction() {
    assertEquals(rational("0.0"), rational("0") - p_float(0.0))
    assertEquals(rational("-23.0"), rational("0") - p_float(23.0))
    assertEquals(rational("-23.123"), rational("0") - p_float(23.123))
    assertEquals(rational("32.0"), rational("0") - p_float(-32.0))
    assertEquals(rational("32.456"), rational("0") - p_float(-32.456))
    // Skipped test assertEquals(something, rational("0") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - p_float(Float.NaN_))
    assertEquals(rational("-340282350000000000000000000000000000000"), rational("0") - p_float(Float.MAX_VALUE))
    assertEquals(rational("-1.4E-45"), rational("0") - p_float(Float.MIN_VALUE))

    assertEquals(rational("23.0"), rational("23") - p_float(0.0))
    assertEquals(rational("0.0"), rational("23") - p_float(23.0))
    assertEquals(rational("-0.123"), rational("23") - p_float(23.123))
    assertEquals(rational("55.0"), rational("23") - p_float(-32.0))
    assertEquals(rational("55.456"), rational("23") - p_float(-32.456))
    // Skipped test assertEquals(something, rational("23") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - p_float(Float.NaN_))
    assertEquals(rational("-340282349999999999999999999999999999977"), rational("23") - p_float(Float.MAX_VALUE))
    assertEquals(rational("22.9999999999999999999999999999999999999999999986"), rational("23") - p_float(Float.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - p_float(0.0))
    assertEquals(rational("0.123"), rational("23.123") - p_float(23.0))
    assertEquals(rational("0.000"), rational("23.123") - p_float(23.123))
    assertEquals(rational("55.123"), rational("23.123") - p_float(-32.0))
    assertEquals(rational("55.579"), rational("23.123") - p_float(-32.456))
    // Skipped test assertEquals(something, rational("23.123") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - p_float(Float.NaN_))
    assertEquals(rational("-340282349999999999999999999999999999976.877"), rational("23.123") - p_float(Float.MAX_VALUE))
    assertEquals(rational("23.1229999999999999999999999999999999999999999986"), rational("23.123") - p_float(Float.MIN_VALUE))

    assertEquals(rational("-32.0"), rational("-32") - p_float(0.0))
    assertEquals(rational("-55.0"), rational("-32") - p_float(23.0))
    assertEquals(rational("-55.123"), rational("-32") - p_float(23.123))
    assertEquals(rational("0.0"), rational("-32") - p_float(-32.0))
    assertEquals(rational("0.456"), rational("-32") - p_float(-32.456))
    // Skipped test assertEquals(something, rational("-32") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - p_float(Float.NaN_))
    assertEquals(rational("-340282350000000000000000000000000000032"), rational("-32") - p_float(Float.MAX_VALUE))
    assertEquals(rational("-32.0000000000000000000000000000000000000000000014"), rational("-32") - p_float(Float.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - p_float(0.0))
    assertEquals(rational("-55.456"), rational("-32.456") - p_float(23.0))
    assertEquals(rational("-55.579"), rational("-32.456") - p_float(23.123))
    assertEquals(rational("-0.456"), rational("-32.456") - p_float(-32.0))
    assertEquals(rational("0.000"), rational("-32.456") - p_float(-32.456))
    // Skipped test assertEquals(something, rational("-32.456") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - p_float(Float.NaN_))
    assertEquals(rational("-340282350000000000000000000000000000032.456"), rational("-32.456") - p_float(Float.MAX_VALUE))
    assertEquals(rational("-32.4560000000000000000000000000000000000000000014"), rational("-32.456") - p_float(Float.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - p_float(0.0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - p_float(23.0))
    assertEquals(rational("123456789012345678901234567867.000456789"), rational("123456789012345678901234567890.123456789") - p_float(23.123))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - p_float(-32.0))
    assertEquals(rational("123456789012345678901234567922.579456789"), rational("123456789012345678901234567890.123456789") - p_float(-32.456))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_float(Float.NaN_))
    assertEquals(rational("-340282349876543210987654321098765432109.876543211"), rational("123456789012345678901234567890.123456789") - p_float(Float.MAX_VALUE))
    assertEquals(rational("123456789012345678901234567890.1234567889999999999999999999999999999999999986"), rational("123456789012345678901234567890.123456789") - p_float(Float.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - p_float(0.0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - p_float(23.0))
    assertEquals(rational("-123456789012345678901234567913.246456789"), rational("-123456789012345678901234567890.123456789") - p_float(23.123))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - p_float(-32.0))
    assertEquals(rational("-123456789012345678901234567857.667456789"), rational("-123456789012345678901234567890.123456789") - p_float(-32.456))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_float(Float.NaN_))
    assertEquals(rational("-340282350123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - p_float(Float.MAX_VALUE))
    assertEquals(rational("-123456789012345678901234567890.1234567890000000000000000000000000000000000014"), rational("-123456789012345678901234567890.123456789") - p_float(Float.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - p_float(0.0)))
  }

  function testRationalFloatSubtraction() {
    assertEquals(rational("0.0"), rational("0") - b_float(0.0))
    assertEquals(rational("-23.0"), rational("0") - b_float(23.0))
    assertEquals(rational("-23.123"), rational("0") - b_float(23.123))
    assertEquals(rational("32.0"), rational("0") - b_float(-32.0))
    assertEquals(rational("32.456"), rational("0") - b_float(-32.456))
    // Skipped test assertEquals(something, rational("0") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - b_float(Float.NaN_))
    assertEquals(rational("-340282350000000000000000000000000000000"), rational("0") - b_float(Float.MAX_VALUE))
    assertEquals(rational("-1.4E-45"), rational("0") - b_float(Float.MIN_VALUE))

    assertEquals(rational("23.0"), rational("23") - b_float(0.0))
    assertEquals(rational("0.0"), rational("23") - b_float(23.0))
    assertEquals(rational("-0.123"), rational("23") - b_float(23.123))
    assertEquals(rational("55.0"), rational("23") - b_float(-32.0))
    assertEquals(rational("55.456"), rational("23") - b_float(-32.456))
    // Skipped test assertEquals(something, rational("23") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - b_float(Float.NaN_))
    assertEquals(rational("-340282349999999999999999999999999999977"), rational("23") - b_float(Float.MAX_VALUE))
    assertEquals(rational("22.9999999999999999999999999999999999999999999986"), rational("23") - b_float(Float.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - b_float(0.0))
    assertEquals(rational("0.123"), rational("23.123") - b_float(23.0))
    assertEquals(rational("0.000"), rational("23.123") - b_float(23.123))
    assertEquals(rational("55.123"), rational("23.123") - b_float(-32.0))
    assertEquals(rational("55.579"), rational("23.123") - b_float(-32.456))
    // Skipped test assertEquals(something, rational("23.123") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - b_float(Float.NaN_))
    assertEquals(rational("-340282349999999999999999999999999999976.877"), rational("23.123") - b_float(Float.MAX_VALUE))
    assertEquals(rational("23.1229999999999999999999999999999999999999999986"), rational("23.123") - b_float(Float.MIN_VALUE))

    assertEquals(rational("-32.0"), rational("-32") - b_float(0.0))
    assertEquals(rational("-55.0"), rational("-32") - b_float(23.0))
    assertEquals(rational("-55.123"), rational("-32") - b_float(23.123))
    assertEquals(rational("0.0"), rational("-32") - b_float(-32.0))
    assertEquals(rational("0.456"), rational("-32") - b_float(-32.456))
    // Skipped test assertEquals(something, rational("-32") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - b_float(Float.NaN_))
    assertEquals(rational("-340282350000000000000000000000000000032"), rational("-32") - b_float(Float.MAX_VALUE))
    assertEquals(rational("-32.0000000000000000000000000000000000000000000014"), rational("-32") - b_float(Float.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - b_float(0.0))
    assertEquals(rational("-55.456"), rational("-32.456") - b_float(23.0))
    assertEquals(rational("-55.579"), rational("-32.456") - b_float(23.123))
    assertEquals(rational("-0.456"), rational("-32.456") - b_float(-32.0))
    assertEquals(rational("0.000"), rational("-32.456") - b_float(-32.456))
    // Skipped test assertEquals(something, rational("-32.456") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - b_float(Float.NaN_))
    assertEquals(rational("-340282350000000000000000000000000000032.456"), rational("-32.456") - b_float(Float.MAX_VALUE))
    assertEquals(rational("-32.4560000000000000000000000000000000000000000014"), rational("-32.456") - b_float(Float.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - b_float(0.0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - b_float(23.0))
    assertEquals(rational("123456789012345678901234567867.000456789"), rational("123456789012345678901234567890.123456789") - b_float(23.123))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - b_float(-32.0))
    assertEquals(rational("123456789012345678901234567922.579456789"), rational("123456789012345678901234567890.123456789") - b_float(-32.456))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_float(Float.NaN_))
    assertEquals(rational("-340282349876543210987654321098765432109.876543211"), rational("123456789012345678901234567890.123456789") - b_float(Float.MAX_VALUE))
    assertEquals(rational("123456789012345678901234567890.1234567889999999999999999999999999999999999986"), rational("123456789012345678901234567890.123456789") - b_float(Float.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - b_float(0.0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - b_float(23.0))
    assertEquals(rational("-123456789012345678901234567913.246456789"), rational("-123456789012345678901234567890.123456789") - b_float(23.123))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - b_float(-32.0))
    assertEquals(rational("-123456789012345678901234567857.667456789"), rational("-123456789012345678901234567890.123456789") - b_float(-32.456))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_float(Float.NaN_))
    assertEquals(rational("-340282350123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - b_float(Float.MAX_VALUE))
    assertEquals(rational("-123456789012345678901234567890.1234567890000000000000000000000000000000000014"), rational("-123456789012345678901234567890.123456789") - b_float(Float.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - b_float(0.0)))
  }

  function testRationalPDoubleSubtraction() {
    assertEquals(rational("0.0"), rational("0") - p_double(0.0))
    assertEquals(rational("-23.0"), rational("0") - p_double(23.0))
    assertEquals(rational("-23.123"), rational("0") - p_double(23.123))
    assertEquals(rational("32.0"), rational("0") - p_double(-32.0))
    assertEquals(rational("32.456"), rational("0") - p_double(-32.456))
    // Skipped test assertEquals(something, rational("0") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - p_double(Double.NaN_))
    assertEquals(rational("-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"), rational("0") - p_double(Double.MAX_VALUE))
    assertEquals(rational("-4.9E-324"), rational("0") - p_double(Double.MIN_VALUE))

    assertEquals(rational("23.0"), rational("23") - p_double(0.0))
    assertEquals(rational("0.0"), rational("23") - p_double(23.0))
    assertEquals(rational("-0.123"), rational("23") - p_double(23.123))
    assertEquals(rational("55.0"), rational("23") - p_double(-32.0))
    assertEquals(rational("55.456"), rational("23") - p_double(-32.456))
    // Skipped test assertEquals(something, rational("23") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - p_double(Double.NaN_))
    assertEquals(rational("-179769313486231569999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999977"), rational("23") - p_double(Double.MAX_VALUE))
    assertEquals(rational("22.9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999951"), rational("23") - p_double(Double.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - p_double(0.0))
    assertEquals(rational("0.123"), rational("23.123") - p_double(23.0))
    assertEquals(rational("0.000"), rational("23.123") - p_double(23.123))
    assertEquals(rational("55.123"), rational("23.123") - p_double(-32.0))
    assertEquals(rational("55.579"), rational("23.123") - p_double(-32.456))
    // Skipped test assertEquals(something, rational("23.123") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - p_double(Double.NaN_))
    assertEquals(rational("-179769313486231569999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999976.877"), rational("23.123") - p_double(Double.MAX_VALUE))
    assertEquals(rational("23.1229999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999951"), rational("23.123") - p_double(Double.MIN_VALUE))

    assertEquals(rational("-32.0"), rational("-32") - p_double(0.0))
    assertEquals(rational("-55.0"), rational("-32") - p_double(23.0))
    assertEquals(rational("-55.123"), rational("-32") - p_double(23.123))
    assertEquals(rational("0.0"), rational("-32") - p_double(-32.0))
    assertEquals(rational("0.456"), rational("-32") - p_double(-32.456))
    // Skipped test assertEquals(something, rational("-32") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - p_double(Double.NaN_))
    assertEquals(rational("-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000032"), rational("-32") - p_double(Double.MAX_VALUE))
    assertEquals(rational("-32.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049"), rational("-32") - p_double(Double.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - p_double(0.0))
    assertEquals(rational("-55.456"), rational("-32.456") - p_double(23.0))
    assertEquals(rational("-55.579"), rational("-32.456") - p_double(23.123))
    assertEquals(rational("-0.456"), rational("-32.456") - p_double(-32.0))
    assertEquals(rational("0.000"), rational("-32.456") - p_double(-32.456))
    // Skipped test assertEquals(something, rational("-32.456") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - p_double(Double.NaN_))
    assertEquals(rational("-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000032.456"), rational("-32.456") - p_double(Double.MAX_VALUE))
    assertEquals(rational("-32.4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049"), rational("-32.456") - p_double(Double.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - p_double(0.0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - p_double(23.0))
    assertEquals(rational("123456789012345678901234567867.000456789"), rational("123456789012345678901234567890.123456789") - p_double(23.123))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - p_double(-32.0))
    assertEquals(rational("123456789012345678901234567922.579456789"), rational("123456789012345678901234567890.123456789") - p_double(-32.456))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_double(Double.NaN_))
    assertEquals(rational("-179769313486231569999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999876543210987654321098765432109.876543211"), rational("123456789012345678901234567890.123456789") - p_double(Double.MAX_VALUE))
    assertEquals(rational("123456789012345678901234567890.1234567889999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999951"), rational("123456789012345678901234567890.123456789") - p_double(Double.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - p_double(0.0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - p_double(23.0))
    assertEquals(rational("-123456789012345678901234567913.246456789"), rational("-123456789012345678901234567890.123456789") - p_double(23.123))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - p_double(-32.0))
    assertEquals(rational("-123456789012345678901234567857.667456789"), rational("-123456789012345678901234567890.123456789") - p_double(-32.456))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_double(Double.NaN_))
    assertEquals(rational("-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - p_double(Double.MAX_VALUE))
    assertEquals(rational("-123456789012345678901234567890.1234567890000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049"), rational("-123456789012345678901234567890.123456789") - p_double(Double.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - p_double(0.0)))
  }

  function testRationalDoubleSubtraction() {
    assertEquals(rational("0.0"), rational("0") - b_double(0.0))
    assertEquals(rational("-23.0"), rational("0") - b_double(23.0))
    assertEquals(rational("-23.123"), rational("0") - b_double(23.123))
    assertEquals(rational("32.0"), rational("0") - b_double(-32.0))
    assertEquals(rational("32.456"), rational("0") - b_double(-32.456))
    // Skipped test assertEquals(something, rational("0") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - b_double(Double.NaN_))
    assertEquals(rational("-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"), rational("0") - b_double(Double.MAX_VALUE))
    assertEquals(rational("-4.9E-324"), rational("0") - b_double(Double.MIN_VALUE))

    assertEquals(rational("23.0"), rational("23") - b_double(0.0))
    assertEquals(rational("0.0"), rational("23") - b_double(23.0))
    assertEquals(rational("-0.123"), rational("23") - b_double(23.123))
    assertEquals(rational("55.0"), rational("23") - b_double(-32.0))
    assertEquals(rational("55.456"), rational("23") - b_double(-32.456))
    // Skipped test assertEquals(something, rational("23") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - b_double(Double.NaN_))
    assertEquals(rational("-179769313486231569999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999977"), rational("23") - b_double(Double.MAX_VALUE))
    assertEquals(rational("22.9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999951"), rational("23") - b_double(Double.MIN_VALUE))

    assertEquals(rational("23.123"), rational("23.123") - b_double(0.0))
    assertEquals(rational("0.123"), rational("23.123") - b_double(23.0))
    assertEquals(rational("0.000"), rational("23.123") - b_double(23.123))
    assertEquals(rational("55.123"), rational("23.123") - b_double(-32.0))
    assertEquals(rational("55.579"), rational("23.123") - b_double(-32.456))
    // Skipped test assertEquals(something, rational("23.123") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - b_double(Double.NaN_))
    assertEquals(rational("-179769313486231569999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999976.877"), rational("23.123") - b_double(Double.MAX_VALUE))
    assertEquals(rational("23.1229999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999951"), rational("23.123") - b_double(Double.MIN_VALUE))

    assertEquals(rational("-32.0"), rational("-32") - b_double(0.0))
    assertEquals(rational("-55.0"), rational("-32") - b_double(23.0))
    assertEquals(rational("-55.123"), rational("-32") - b_double(23.123))
    assertEquals(rational("0.0"), rational("-32") - b_double(-32.0))
    assertEquals(rational("0.456"), rational("-32") - b_double(-32.456))
    // Skipped test assertEquals(something, rational("-32") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - b_double(Double.NaN_))
    assertEquals(rational("-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000032"), rational("-32") - b_double(Double.MAX_VALUE))
    assertEquals(rational("-32.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049"), rational("-32") - b_double(Double.MIN_VALUE))

    assertEquals(rational("-32.456"), rational("-32.456") - b_double(0.0))
    assertEquals(rational("-55.456"), rational("-32.456") - b_double(23.0))
    assertEquals(rational("-55.579"), rational("-32.456") - b_double(23.123))
    assertEquals(rational("-0.456"), rational("-32.456") - b_double(-32.0))
    assertEquals(rational("0.000"), rational("-32.456") - b_double(-32.456))
    // Skipped test assertEquals(something, rational("-32.456") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - b_double(Double.NaN_))
    assertEquals(rational("-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000032.456"), rational("-32.456") - b_double(Double.MAX_VALUE))
    assertEquals(rational("-32.4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049"), rational("-32.456") - b_double(Double.MIN_VALUE))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - b_double(0.0))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - b_double(23.0))
    assertEquals(rational("123456789012345678901234567867.000456789"), rational("123456789012345678901234567890.123456789") - b_double(23.123))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - b_double(-32.0))
    assertEquals(rational("123456789012345678901234567922.579456789"), rational("123456789012345678901234567890.123456789") - b_double(-32.456))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_double(Double.NaN_))
    assertEquals(rational("-179769313486231569999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999876543210987654321098765432109.876543211"), rational("123456789012345678901234567890.123456789") - b_double(Double.MAX_VALUE))
    assertEquals(rational("123456789012345678901234567890.1234567889999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999951"), rational("123456789012345678901234567890.123456789") - b_double(Double.MIN_VALUE))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - b_double(0.0))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - b_double(23.0))
    assertEquals(rational("-123456789012345678901234567913.246456789"), rational("-123456789012345678901234567890.123456789") - b_double(23.123))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - b_double(-32.0))
    assertEquals(rational("-123456789012345678901234567857.667456789"), rational("-123456789012345678901234567890.123456789") - b_double(-32.456))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_double(Double.NaN_))
    assertEquals(rational("-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - b_double(Double.MAX_VALUE))
    assertEquals(rational("-123456789012345678901234567890.1234567890000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049"), rational("-123456789012345678901234567890.123456789") - b_double(Double.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") - b_double(0.0)))
  }

  function testRationalBigIntegerSubtraction() {
    assertEquals(rational("0"), rational("0") - big_int("0"))
    assertEquals(rational("-23"), rational("0") - big_int("23"))
    assertEquals(rational("32"), rational("0") - big_int("-32"))
    assertEquals(rational("-123456789012345678901234567890"), rational("0") - big_int("123456789012345678901234567890"))
    assertEquals(rational("123456789012345678901234567890"), rational("0") - big_int("-123456789012345678901234567890"))

    assertEquals(rational("23"), rational("23") - big_int("0"))
    assertEquals(rational("0"), rational("23") - big_int("23"))
    assertEquals(rational("55"), rational("23") - big_int("-32"))
    assertEquals(rational("-123456789012345678901234567867"), rational("23") - big_int("123456789012345678901234567890"))
    assertEquals(rational("123456789012345678901234567913"), rational("23") - big_int("-123456789012345678901234567890"))

    assertEquals(rational("23.123"), rational("23.123") - big_int("0"))
    assertEquals(rational("0.123"), rational("23.123") - big_int("23"))
    assertEquals(rational("55.123"), rational("23.123") - big_int("-32"))
    assertEquals(rational("-123456789012345678901234567866.877"), rational("23.123") - big_int("123456789012345678901234567890"))
    assertEquals(rational("123456789012345678901234567913.123"), rational("23.123") - big_int("-123456789012345678901234567890"))

    assertEquals(rational("-32"), rational("-32") - big_int("0"))
    assertEquals(rational("-55"), rational("-32") - big_int("23"))
    assertEquals(rational("0"), rational("-32") - big_int("-32"))
    assertEquals(rational("-123456789012345678901234567922"), rational("-32") - big_int("123456789012345678901234567890"))
    assertEquals(rational("123456789012345678901234567858"), rational("-32") - big_int("-123456789012345678901234567890"))

    assertEquals(rational("-32.456"), rational("-32.456") - big_int("0"))
    assertEquals(rational("-55.456"), rational("-32.456") - big_int("23"))
    assertEquals(rational("-0.456"), rational("-32.456") - big_int("-32"))
    assertEquals(rational("-123456789012345678901234567922.456"), rational("-32.456") - big_int("123456789012345678901234567890"))
    assertEquals(rational("123456789012345678901234567857.544"), rational("-32.456") - big_int("-123456789012345678901234567890"))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - big_int("0"))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - big_int("23"))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - big_int("-32"))
    assertEquals(rational("0.123456789"), rational("123456789012345678901234567890.123456789") - big_int("123456789012345678901234567890"))
    assertEquals(rational("246913578024691357802469135780.123456789"), rational("123456789012345678901234567890.123456789") - big_int("-123456789012345678901234567890"))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - big_int("0"))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - big_int("23"))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - big_int("-32"))
    assertEquals(rational("-246913578024691357802469135780.123456789"), rational("-123456789012345678901234567890.123456789") - big_int("123456789012345678901234567890"))
    assertEquals(rational("-0.123456789"), rational("-123456789012345678901234567890.123456789") - big_int("-123456789012345678901234567890"))

    assertEquals(Rational, statictypeof(rational("0") - big_int("0")))
  }

  function testRationalRationalSubtraction() {
    assertEquals(rational("0"), rational("0") - rational("0"))
    assertEquals(rational("-23"), rational("0") - rational("23"))
    assertEquals(rational("-23.123"), rational("0") - rational("23.123"))
    assertEquals(rational("32"), rational("0") - rational("-32"))
    assertEquals(rational("32.456"), rational("0") - rational("-32.456"))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("0") - rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("0") - rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("23"), rational("23") - rational("0"))
    assertEquals(rational("0"), rational("23") - rational("23"))
    assertEquals(rational("-0.123"), rational("23") - rational("23.123"))
    assertEquals(rational("55"), rational("23") - rational("-32"))
    assertEquals(rational("55.456"), rational("23") - rational("-32.456"))
    assertEquals(rational("-123456789012345678901234567867.123456789"), rational("23") - rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("123456789012345678901234567913.123456789"), rational("23") - rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("23.123"), rational("23.123") - rational("0"))
    assertEquals(rational("0.123"), rational("23.123") - rational("23"))
    assertEquals(rational("0.000"), rational("23.123") - rational("23.123"))
    assertEquals(rational("55.123"), rational("23.123") - rational("-32"))
    assertEquals(rational("55.579"), rational("23.123") - rational("-32.456"))
    assertEquals(rational("-123456789012345678901234567867.000456789"), rational("23.123") - rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("123456789012345678901234567913.246456789"), rational("23.123") - rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("-32"), rational("-32") - rational("0"))
    assertEquals(rational("-55"), rational("-32") - rational("23"))
    assertEquals(rational("-55.123"), rational("-32") - rational("23.123"))
    assertEquals(rational("0"), rational("-32") - rational("-32"))
    assertEquals(rational("0.456"), rational("-32") - rational("-32.456"))
    assertEquals(rational("-123456789012345678901234567922.123456789"), rational("-32") - rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("123456789012345678901234567858.123456789"), rational("-32") - rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("-32.456"), rational("-32.456") - rational("0"))
    assertEquals(rational("-55.456"), rational("-32.456") - rational("23"))
    assertEquals(rational("-55.579"), rational("-32.456") - rational("23.123"))
    assertEquals(rational("-0.456"), rational("-32.456") - rational("-32"))
    assertEquals(rational("0.000"), rational("-32.456") - rational("-32.456"))
    assertEquals(rational("-123456789012345678901234567922.579456789"), rational("-32.456") - rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("123456789012345678901234567857.667456789"), rational("-32.456") - rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") - rational("0"))
    assertEquals(rational("123456789012345678901234567867.123456789"), rational("123456789012345678901234567890.123456789") - rational("23"))
    assertEquals(rational("123456789012345678901234567867.000456789"), rational("123456789012345678901234567890.123456789") - rational("23.123"))
    assertEquals(rational("123456789012345678901234567922.123456789"), rational("123456789012345678901234567890.123456789") - rational("-32"))
    assertEquals(rational("123456789012345678901234567922.579456789"), rational("123456789012345678901234567890.123456789") - rational("-32.456"))
    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") - rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("246913578024691357802469135780.246913578"), rational("123456789012345678901234567890.123456789") - rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") - rational("0"))
    assertEquals(rational("-123456789012345678901234567913.123456789"), rational("-123456789012345678901234567890.123456789") - rational("23"))
    assertEquals(rational("-123456789012345678901234567913.246456789"), rational("-123456789012345678901234567890.123456789") - rational("23.123"))
    assertEquals(rational("-123456789012345678901234567858.123456789"), rational("-123456789012345678901234567890.123456789") - rational("-32"))
    assertEquals(rational("-123456789012345678901234567857.667456789"), rational("-123456789012345678901234567890.123456789") - rational("-32.456"))
    assertEquals(rational("-246913578024691357802469135780.246913578"), rational("-123456789012345678901234567890.123456789") - rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") - rational("-123456789012345678901234567890.123456789"))

    assertEquals(Rational, statictypeof(rational("0") - rational("0")))
  }

}

