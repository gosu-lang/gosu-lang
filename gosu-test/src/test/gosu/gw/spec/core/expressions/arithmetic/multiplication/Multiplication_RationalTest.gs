package gw.spec.core.expressions.arithmetic.multiplication

uses gw.spec.core.expressions.arithmetic.ArithmeticTestBase

uses gw.util.Rational

class Multiplication_RationalTest extends ArithmeticTestBase {

  function testRationalPByteMultiplication() {
    assertEquals(rational("0"), rational("0") * p_byte(0))
    assertEquals(rational("0"), rational("0") * p_byte(1))
    assertEquals(rational("0"), rational("0") * p_byte(-1))
    assertEquals(rational("0"), rational("0") * p_byte(23))
    assertEquals(rational("0"), rational("0") * p_byte(-32))
    assertEquals(rational("0"), rational("0") * p_byte(Byte.MAX_VALUE))
    assertEquals(rational("0"), rational("0") * p_byte(Byte.MIN_VALUE))

    assertEquals(rational("0"), rational("1") * p_byte(0))
    assertEquals(rational("1"), rational("1") * p_byte(1))
    assertEquals(rational("-1"), rational("1") * p_byte(-1))
    assertEquals(rational("23"), rational("1") * p_byte(23))
    assertEquals(rational("-32"), rational("1") * p_byte(-32))
    assertEquals(rational("127"), rational("1") * p_byte(Byte.MAX_VALUE))
    assertEquals(rational("-128"), rational("1") * p_byte(Byte.MIN_VALUE))

    assertEquals(rational("0"), rational("-1") * p_byte(0))
    assertEquals(rational("-1"), rational("-1") * p_byte(1))
    assertEquals(rational("1"), rational("-1") * p_byte(-1))
    assertEquals(rational("-23"), rational("-1") * p_byte(23))
    assertEquals(rational("32"), rational("-1") * p_byte(-32))
    assertEquals(rational("-127"), rational("-1") * p_byte(Byte.MAX_VALUE))
    assertEquals(rational("128"), rational("-1") * p_byte(Byte.MIN_VALUE))

    assertEquals(rational("0"), rational("23") * p_byte(0))
    assertEquals(rational("23"), rational("23") * p_byte(1))
    assertEquals(rational("-23"), rational("23") * p_byte(-1))
    assertEquals(rational("529"), rational("23") * p_byte(23))
    assertEquals(rational("-736"), rational("23") * p_byte(-32))
    assertEquals(rational("2921"), rational("23") * p_byte(Byte.MAX_VALUE))
    assertEquals(rational("-2944"), rational("23") * p_byte(Byte.MIN_VALUE))

    assertEquals(rational("0.000"), rational("23.123") * p_byte(0))
    assertEquals(rational("23.123"), rational("23.123") * p_byte(1))
    assertEquals(rational("-23.123"), rational("23.123") * p_byte(-1))
    assertEquals(rational("531.829"), rational("23.123") * p_byte(23))
    assertEquals(rational("-739.936"), rational("23.123") * p_byte(-32))
    assertEquals(rational("2936.621"), rational("23.123") * p_byte(Byte.MAX_VALUE))
    assertEquals(rational("-2959.744"), rational("23.123") * p_byte(Byte.MIN_VALUE))

    assertEquals(rational("0"), rational("-32") * p_byte(0))
    assertEquals(rational("-32"), rational("-32") * p_byte(1))
    assertEquals(rational("32"), rational("-32") * p_byte(-1))
    assertEquals(rational("-736"), rational("-32") * p_byte(23))
    assertEquals(rational("1024"), rational("-32") * p_byte(-32))
    assertEquals(rational("-4064"), rational("-32") * p_byte(Byte.MAX_VALUE))
    assertEquals(rational("4096"), rational("-32") * p_byte(Byte.MIN_VALUE))

    assertEquals(rational("0.000"), rational("-32.456") * p_byte(0))
    assertEquals(rational("-32.456"), rational("-32.456") * p_byte(1))
    assertEquals(rational("32.456"), rational("-32.456") * p_byte(-1))
    assertEquals(rational("-746.488"), rational("-32.456") * p_byte(23))
    assertEquals(rational("1038.592"), rational("-32.456") * p_byte(-32))
    assertEquals(rational("-4121.912"), rational("-32.456") * p_byte(Byte.MAX_VALUE))
    assertEquals(rational("4154.368"), rational("-32.456") * p_byte(Byte.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * p_byte(0))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_byte(1))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_byte(-1))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * p_byte(23))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("123456789012345678901234567890.123456789") * p_byte(-32))
    assertEquals(rational("15679012204567901220456790122045.679012203"), rational("123456789012345678901234567890.123456789") * p_byte(Byte.MAX_VALUE))
    assertEquals(rational("-15802468993580246899358024689935.802468992"), rational("123456789012345678901234567890.123456789") * p_byte(Byte.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * p_byte(0))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_byte(1))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_byte(-1))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * p_byte(23))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-123456789012345678901234567890.123456789") * p_byte(-32))
    assertEquals(rational("-15679012204567901220456790122045.679012203"), rational("-123456789012345678901234567890.123456789") * p_byte(Byte.MAX_VALUE))
    assertEquals(rational("15802468993580246899358024689935.802468992"), rational("-123456789012345678901234567890.123456789") * p_byte(Byte.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * p_byte(0)))
  }

  function testRationalByteMultiplication() {
    assertEquals(rational("0"), rational("0") * b_byte(0))
    assertEquals(rational("0"), rational("0") * p_byte(1))
    assertEquals(rational("0"), rational("0") * p_byte(-1))
    assertEquals(rational("0"), rational("0") * b_byte(23))
    assertEquals(rational("0"), rational("0") * b_byte(-32))
    assertEquals(rational("0"), rational("0") * b_byte(Byte.MAX_VALUE))
    assertEquals(rational("0"), rational("0") * b_byte(Byte.MIN_VALUE))

    assertEquals(rational("0"), rational("1") * b_byte(0))
    assertEquals(rational("1"), rational("1") * p_byte(1))
    assertEquals(rational("-1"), rational("1") * p_byte(-1))
    assertEquals(rational("23"), rational("1") * b_byte(23))
    assertEquals(rational("-32"), rational("1") * b_byte(-32))
    assertEquals(rational("127"), rational("1") * b_byte(Byte.MAX_VALUE))
    assertEquals(rational("-128"), rational("1") * b_byte(Byte.MIN_VALUE))

    assertEquals(rational("0"), rational("-1") * b_byte(0))
    assertEquals(rational("-1"), rational("-1") * p_byte(1))
    assertEquals(rational("1"), rational("-1") * p_byte(-1))
    assertEquals(rational("-23"), rational("-1") * b_byte(23))
    assertEquals(rational("32"), rational("-1") * b_byte(-32))
    assertEquals(rational("-127"), rational("-1") * b_byte(Byte.MAX_VALUE))
    assertEquals(rational("128"), rational("-1") * b_byte(Byte.MIN_VALUE))

    assertEquals(rational("0"), rational("23") * b_byte(0))
    assertEquals(rational("23"), rational("23") * p_byte(1))
    assertEquals(rational("-23"), rational("23") * p_byte(-1))
    assertEquals(rational("529"), rational("23") * b_byte(23))
    assertEquals(rational("-736"), rational("23") * b_byte(-32))
    assertEquals(rational("2921"), rational("23") * b_byte(Byte.MAX_VALUE))
    assertEquals(rational("-2944"), rational("23") * b_byte(Byte.MIN_VALUE))

    assertEquals(rational("0.000"), rational("23.123") * b_byte(0))
    assertEquals(rational("23.123"), rational("23.123") * p_byte(1))
    assertEquals(rational("-23.123"), rational("23.123") * p_byte(-1))
    assertEquals(rational("531.829"), rational("23.123") * b_byte(23))
    assertEquals(rational("-739.936"), rational("23.123") * b_byte(-32))
    assertEquals(rational("2936.621"), rational("23.123") * b_byte(Byte.MAX_VALUE))
    assertEquals(rational("-2959.744"), rational("23.123") * b_byte(Byte.MIN_VALUE))

    assertEquals(rational("0"), rational("-32") * b_byte(0))
    assertEquals(rational("-32"), rational("-32") * p_byte(1))
    assertEquals(rational("32"), rational("-32") * p_byte(-1))
    assertEquals(rational("-736"), rational("-32") * b_byte(23))
    assertEquals(rational("1024"), rational("-32") * b_byte(-32))
    assertEquals(rational("-4064"), rational("-32") * b_byte(Byte.MAX_VALUE))
    assertEquals(rational("4096"), rational("-32") * b_byte(Byte.MIN_VALUE))

    assertEquals(rational("0.000"), rational("-32.456") * b_byte(0))
    assertEquals(rational("-32.456"), rational("-32.456") * p_byte(1))
    assertEquals(rational("32.456"), rational("-32.456") * p_byte(-1))
    assertEquals(rational("-746.488"), rational("-32.456") * b_byte(23))
    assertEquals(rational("1038.592"), rational("-32.456") * b_byte(-32))
    assertEquals(rational("-4121.912"), rational("-32.456") * b_byte(Byte.MAX_VALUE))
    assertEquals(rational("4154.368"), rational("-32.456") * b_byte(Byte.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * b_byte(0))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_byte(1))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_byte(-1))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * b_byte(23))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("123456789012345678901234567890.123456789") * b_byte(-32))
    assertEquals(rational("15679012204567901220456790122045.679012203"), rational("123456789012345678901234567890.123456789") * b_byte(Byte.MAX_VALUE))
    assertEquals(rational("-15802468993580246899358024689935.802468992"), rational("123456789012345678901234567890.123456789") * b_byte(Byte.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * b_byte(0))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_byte(1))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_byte(-1))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * b_byte(23))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-123456789012345678901234567890.123456789") * b_byte(-32))
    assertEquals(rational("-15679012204567901220456790122045.679012203"), rational("-123456789012345678901234567890.123456789") * b_byte(Byte.MAX_VALUE))
    assertEquals(rational("15802468993580246899358024689935.802468992"), rational("-123456789012345678901234567890.123456789") * b_byte(Byte.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * b_byte(0)))
  }

  function testRationalPShortMultiplication() {
    assertEquals(rational("0"), rational("0") * p_short(0))
    assertEquals(rational("0"), rational("0") * p_short(1))
    assertEquals(rational("0"), rational("0") * p_short(-1))
    assertEquals(rational("0"), rational("0") * p_short(23))
    assertEquals(rational("0"), rational("0") * p_short(-32))
    assertEquals(rational("0"), rational("0") * p_short(Short.MAX_VALUE))
    assertEquals(rational("0"), rational("0") * p_short(Short.MIN_VALUE))

    assertEquals(rational("0"), rational("1") * p_short(0))
    assertEquals(rational("1"), rational("1") * p_short(1))
    assertEquals(rational("-1"), rational("1") * p_short(-1))
    assertEquals(rational("23"), rational("1") * p_short(23))
    assertEquals(rational("-32"), rational("1") * p_short(-32))
    assertEquals(rational("32767"), rational("1") * p_short(Short.MAX_VALUE))
    assertEquals(rational("-32768"), rational("1") * p_short(Short.MIN_VALUE))

    assertEquals(rational("0"), rational("-1") * p_short(0))
    assertEquals(rational("-1"), rational("-1") * p_short(1))
    assertEquals(rational("1"), rational("-1") * p_short(-1))
    assertEquals(rational("-23"), rational("-1") * p_short(23))
    assertEquals(rational("32"), rational("-1") * p_short(-32))
    assertEquals(rational("-32767"), rational("-1") * p_short(Short.MAX_VALUE))
    assertEquals(rational("32768"), rational("-1") * p_short(Short.MIN_VALUE))

    assertEquals(rational("0"), rational("23") * p_short(0))
    assertEquals(rational("23"), rational("23") * p_short(1))
    assertEquals(rational("-23"), rational("23") * p_short(-1))
    assertEquals(rational("529"), rational("23") * p_short(23))
    assertEquals(rational("-736"), rational("23") * p_short(-32))
    assertEquals(rational("753641"), rational("23") * p_short(Short.MAX_VALUE))
    assertEquals(rational("-753664"), rational("23") * p_short(Short.MIN_VALUE))

    assertEquals(rational("0.000"), rational("23.123") * p_short(0))
    assertEquals(rational("23.123"), rational("23.123") * p_short(1))
    assertEquals(rational("-23.123"), rational("23.123") * p_short(-1))
    assertEquals(rational("531.829"), rational("23.123") * p_short(23))
    assertEquals(rational("-739.936"), rational("23.123") * p_short(-32))
    assertEquals(rational("757671.341"), rational("23.123") * p_short(Short.MAX_VALUE))
    assertEquals(rational("-757694.464"), rational("23.123") * p_short(Short.MIN_VALUE))

    assertEquals(rational("0"), rational("-32") * p_short(0))
    assertEquals(rational("-32"), rational("-32") * p_short(1))
    assertEquals(rational("32"), rational("-32") * p_short(-1))
    assertEquals(rational("-736"), rational("-32") * p_short(23))
    assertEquals(rational("1024"), rational("-32") * p_short(-32))
    assertEquals(rational("-1048544"), rational("-32") * p_short(Short.MAX_VALUE))
    assertEquals(rational("1048576"), rational("-32") * p_short(Short.MIN_VALUE))

    assertEquals(rational("0.000"), rational("-32.456") * p_short(0))
    assertEquals(rational("-32.456"), rational("-32.456") * p_short(1))
    assertEquals(rational("32.456"), rational("-32.456") * p_short(-1))
    assertEquals(rational("-746.488"), rational("-32.456") * p_short(23))
    assertEquals(rational("1038.592"), rational("-32.456") * p_short(-32))
    assertEquals(rational("-1063485.752"), rational("-32.456") * p_short(Short.MAX_VALUE))
    assertEquals(rational("1063518.208"), rational("-32.456") * p_short(Short.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * p_short(0))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_short(1))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_short(-1))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * p_short(23))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("123456789012345678901234567890.123456789") * p_short(-32))
    assertEquals(rational("4045308605567530860556753086055675.308605163"), rational("123456789012345678901234567890.123456789") * p_short(Short.MAX_VALUE))
    assertEquals(rational("-4045432062356543206235654320623565.432061952"), rational("123456789012345678901234567890.123456789") * p_short(Short.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * p_short(0))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_short(1))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_short(-1))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * p_short(23))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-123456789012345678901234567890.123456789") * p_short(-32))
    assertEquals(rational("-4045308605567530860556753086055675.308605163"), rational("-123456789012345678901234567890.123456789") * p_short(Short.MAX_VALUE))
    assertEquals(rational("4045432062356543206235654320623565.432061952"), rational("-123456789012345678901234567890.123456789") * p_short(Short.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * p_short(0)))
  }

  function testRationalShortMultiplication() {
    assertEquals(rational("0"), rational("0") * b_short(0))
    assertEquals(rational("0"), rational("0") * b_short(1))
    assertEquals(rational("0"), rational("0") * b_short(-1))
    assertEquals(rational("0"), rational("0") * b_short(23))
    assertEquals(rational("0"), rational("0") * b_short(-32))
    assertEquals(rational("0"), rational("0") * b_short(Short.MAX_VALUE))
    assertEquals(rational("0"), rational("0") * b_short(Short.MIN_VALUE))

    assertEquals(rational("0"), rational("1") * b_short(0))
    assertEquals(rational("1"), rational("1") * b_short(1))
    assertEquals(rational("-1"), rational("1") * b_short(-1))
    assertEquals(rational("23"), rational("1") * b_short(23))
    assertEquals(rational("-32"), rational("1") * b_short(-32))
    assertEquals(rational("32767"), rational("1") * b_short(Short.MAX_VALUE))
    assertEquals(rational("-32768"), rational("1") * b_short(Short.MIN_VALUE))

    assertEquals(rational("0"), rational("-1") * b_short(0))
    assertEquals(rational("-1"), rational("-1") * b_short(1))
    assertEquals(rational("1"), rational("-1") * b_short(-1))
    assertEquals(rational("-23"), rational("-1") * b_short(23))
    assertEquals(rational("32"), rational("-1") * b_short(-32))
    assertEquals(rational("-32767"), rational("-1") * b_short(Short.MAX_VALUE))
    assertEquals(rational("32768"), rational("-1") * b_short(Short.MIN_VALUE))

    assertEquals(rational("0"), rational("23") * b_short(0))
    assertEquals(rational("23"), rational("23") * b_short(1))
    assertEquals(rational("-23"), rational("23") * b_short(-1))
    assertEquals(rational("529"), rational("23") * b_short(23))
    assertEquals(rational("-736"), rational("23") * b_short(-32))
    assertEquals(rational("753641"), rational("23") * b_short(Short.MAX_VALUE))
    assertEquals(rational("-753664"), rational("23") * b_short(Short.MIN_VALUE))

    assertEquals(rational("0.000"), rational("23.123") * b_short(0))
    assertEquals(rational("23.123"), rational("23.123") * b_short(1))
    assertEquals(rational("-23.123"), rational("23.123") * b_short(-1))
    assertEquals(rational("531.829"), rational("23.123") * b_short(23))
    assertEquals(rational("-739.936"), rational("23.123") * b_short(-32))
    assertEquals(rational("757671.341"), rational("23.123") * b_short(Short.MAX_VALUE))
    assertEquals(rational("-757694.464"), rational("23.123") * b_short(Short.MIN_VALUE))

    assertEquals(rational("0"), rational("-32") * b_short(0))
    assertEquals(rational("-32"), rational("-32") * b_short(1))
    assertEquals(rational("32"), rational("-32") * b_short(-1))
    assertEquals(rational("-736"), rational("-32") * b_short(23))
    assertEquals(rational("1024"), rational("-32") * b_short(-32))
    assertEquals(rational("-1048544"), rational("-32") * b_short(Short.MAX_VALUE))
    assertEquals(rational("1048576"), rational("-32") * b_short(Short.MIN_VALUE))

    assertEquals(rational("0.000"), rational("-32.456") * b_short(0))
    assertEquals(rational("-32.456"), rational("-32.456") * b_short(1))
    assertEquals(rational("32.456"), rational("-32.456") * b_short(-1))
    assertEquals(rational("-746.488"), rational("-32.456") * b_short(23))
    assertEquals(rational("1038.592"), rational("-32.456") * b_short(-32))
    assertEquals(rational("-1063485.752"), rational("-32.456") * b_short(Short.MAX_VALUE))
    assertEquals(rational("1063518.208"), rational("-32.456") * b_short(Short.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * b_short(0))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * b_short(1))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * b_short(-1))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * b_short(23))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("123456789012345678901234567890.123456789") * b_short(-32))
    assertEquals(rational("4045308605567530860556753086055675.308605163"), rational("123456789012345678901234567890.123456789") * b_short(Short.MAX_VALUE))
    assertEquals(rational("-4045432062356543206235654320623565.432061952"), rational("123456789012345678901234567890.123456789") * b_short(Short.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * b_short(0))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * b_short(1))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * b_short(-1))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * b_short(23))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-123456789012345678901234567890.123456789") * b_short(-32))
    assertEquals(rational("-4045308605567530860556753086055675.308605163"), rational("-123456789012345678901234567890.123456789") * b_short(Short.MAX_VALUE))
    assertEquals(rational("4045432062356543206235654320623565.432061952"), rational("-123456789012345678901234567890.123456789") * b_short(Short.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * b_short(0)))
  }

  function testRationalPCharMultiplication() {
    assertEquals(rational("0"), rational("0") * p_char(0))
    assertEquals(rational("0"), rational("0") * p_char(1))
    assertEquals(rational("0"), rational("0") * p_char(23))
    assertEquals(rational("0"), rational("0") * p_char(Character.MAX_VALUE))

    assertEquals(rational("0"), rational("1") * p_char(0))
    assertEquals(rational("1"), rational("1") * p_char(1))
    assertEquals(rational("23"), rational("1") * p_char(23))
    assertEquals(rational("65535"), rational("1") * p_char(Character.MAX_VALUE))

    assertEquals(rational("0"), rational("-1") * p_char(0))
    assertEquals(rational("-1"), rational("-1") * p_char(1))
    assertEquals(rational("-23"), rational("-1") * p_char(23))
    assertEquals(rational("-65535"), rational("-1") * p_char(Character.MAX_VALUE))

    assertEquals(rational("0"), rational("23") * p_char(0))
    assertEquals(rational("23"), rational("23") * p_char(1))
    assertEquals(rational("529"), rational("23") * p_char(23))
    assertEquals(rational("1507305"), rational("23") * p_char(Character.MAX_VALUE))

    assertEquals(rational("0.000"), rational("23.123") * p_char(0))
    assertEquals(rational("23.123"), rational("23.123") * p_char(1))
    assertEquals(rational("531.829"), rational("23.123") * p_char(23))
    assertEquals(rational("1515365.805"), rational("23.123") * p_char(Character.MAX_VALUE))

    assertEquals(rational("0"), rational("-32") * p_char(0))
    assertEquals(rational("-32"), rational("-32") * p_char(1))
    assertEquals(rational("-736"), rational("-32") * p_char(23))
    assertEquals(rational("-2097120"), rational("-32") * p_char(Character.MAX_VALUE))

    assertEquals(rational("0.000"), rational("-32.456") * p_char(0))
    assertEquals(rational("-32.456"), rational("-32.456") * p_char(1))
    assertEquals(rational("-746.488"), rational("-32.456") * p_char(23))
    assertEquals(rational("-2127003.960"), rational("-32.456") * p_char(Character.MAX_VALUE))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * p_char(0))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_char(1))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * p_char(23))
    assertEquals(rational("8090740667924074066792407406679240.740667115"), rational("123456789012345678901234567890.123456789") * p_char(Character.MAX_VALUE))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * p_char(0))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_char(1))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * p_char(23))
    assertEquals(rational("-8090740667924074066792407406679240.740667115"), rational("-123456789012345678901234567890.123456789") * p_char(Character.MAX_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * p_char(0)))
  }

  function testRationalCharacterMultiplication() {
    assertEquals(rational("0"), rational("0") * b_char(0))
    assertEquals(rational("0"), rational("0") * b_char(1))
    assertEquals(rational("0"), rational("0") * b_char(23))
    assertEquals(rational("0"), rational("0") * b_char(Character.MAX_VALUE))

    assertEquals(rational("0"), rational("1") * b_char(0))
    assertEquals(rational("1"), rational("1") * b_char(1))
    assertEquals(rational("23"), rational("1") * b_char(23))
    assertEquals(rational("65535"), rational("1") * b_char(Character.MAX_VALUE))

    assertEquals(rational("0"), rational("-1") * b_char(0))
    assertEquals(rational("-1"), rational("-1") * b_char(1))
    assertEquals(rational("-23"), rational("-1") * b_char(23))
    assertEquals(rational("-65535"), rational("-1") * b_char(Character.MAX_VALUE))

    assertEquals(rational("0"), rational("23") * b_char(0))
    assertEquals(rational("23"), rational("23") * b_char(1))
    assertEquals(rational("529"), rational("23") * b_char(23))
    assertEquals(rational("1507305"), rational("23") * b_char(Character.MAX_VALUE))

    assertEquals(rational("0.000"), rational("23.123") * b_char(0))
    assertEquals(rational("23.123"), rational("23.123") * b_char(1))
    assertEquals(rational("531.829"), rational("23.123") * b_char(23))
    assertEquals(rational("1515365.805"), rational("23.123") * b_char(Character.MAX_VALUE))

    assertEquals(rational("0"), rational("-32") * b_char(0))
    assertEquals(rational("-32"), rational("-32") * b_char(1))
    assertEquals(rational("-736"), rational("-32") * b_char(23))
    assertEquals(rational("-2097120"), rational("-32") * b_char(Character.MAX_VALUE))

    assertEquals(rational("0.000"), rational("-32.456") * b_char(0))
    assertEquals(rational("-32.456"), rational("-32.456") * b_char(1))
    assertEquals(rational("-746.488"), rational("-32.456") * b_char(23))
    assertEquals(rational("-2127003.960"), rational("-32.456") * b_char(Character.MAX_VALUE))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * b_char(0))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * b_char(1))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * b_char(23))
    assertEquals(rational("8090740667924074066792407406679240.740667115"), rational("123456789012345678901234567890.123456789") * b_char(Character.MAX_VALUE))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * b_char(0))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * b_char(1))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * b_char(23))
    assertEquals(rational("-8090740667924074066792407406679240.740667115"), rational("-123456789012345678901234567890.123456789") * b_char(Character.MAX_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * b_char(0)))
  }

  function testRationalPIntMultiplication() {
    assertEquals(rational("0"), rational("0") * p_int(0))
    assertEquals(rational("0"), rational("0") * p_int(1))
    assertEquals(rational("0"), rational("0") * p_int(-1))
    assertEquals(rational("0"), rational("0") * p_int(23))
    assertEquals(rational("0"), rational("0") * p_int(-32))
    assertEquals(rational("0"), rational("0") * p_int(Integer.MAX_VALUE))
    assertEquals(rational("0"), rational("0") * p_int(Integer.MIN_VALUE))

    assertEquals(rational("0"), rational("1") * p_int(0))
    assertEquals(rational("1"), rational("1") * p_int(1))
    assertEquals(rational("-1"), rational("1") * p_int(-1))
    assertEquals(rational("23"), rational("1") * p_int(23))
    assertEquals(rational("-32"), rational("1") * p_int(-32))
    assertEquals(rational("2147483647"), rational("1") * p_int(Integer.MAX_VALUE))
    assertEquals(rational("-2147483648"), rational("1") * p_int(Integer.MIN_VALUE))

    assertEquals(rational("0"), rational("-1") * p_int(0))
    assertEquals(rational("-1"), rational("-1") * p_int(1))
    assertEquals(rational("1"), rational("-1") * p_int(-1))
    assertEquals(rational("-23"), rational("-1") * p_int(23))
    assertEquals(rational("32"), rational("-1") * p_int(-32))
    assertEquals(rational("-2147483647"), rational("-1") * p_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483648"), rational("-1") * p_int(Integer.MIN_VALUE))

    assertEquals(rational("0"), rational("23") * p_int(0))
    assertEquals(rational("23"), rational("23") * p_int(1))
    assertEquals(rational("-23"), rational("23") * p_int(-1))
    assertEquals(rational("529"), rational("23") * p_int(23))
    assertEquals(rational("-736"), rational("23") * p_int(-32))
    assertEquals(rational("49392123881"), rational("23") * p_int(Integer.MAX_VALUE))
    assertEquals(rational("-49392123904"), rational("23") * p_int(Integer.MIN_VALUE))

    assertEquals(rational("0.000"), rational("23.123") * p_int(0))
    assertEquals(rational("23.123"), rational("23.123") * p_int(1))
    assertEquals(rational("-23.123"), rational("23.123") * p_int(-1))
    assertEquals(rational("531.829"), rational("23.123") * p_int(23))
    assertEquals(rational("-739.936"), rational("23.123") * p_int(-32))
    assertEquals(rational("49656264369.581"), rational("23.123") * p_int(Integer.MAX_VALUE))
    assertEquals(rational("-49656264392.704"), rational("23.123") * p_int(Integer.MIN_VALUE))

    assertEquals(rational("0"), rational("-32") * p_int(0))
    assertEquals(rational("-32"), rational("-32") * p_int(1))
    assertEquals(rational("32"), rational("-32") * p_int(-1))
    assertEquals(rational("-736"), rational("-32") * p_int(23))
    assertEquals(rational("1024"), rational("-32") * p_int(-32))
    assertEquals(rational("-68719476704"), rational("-32") * p_int(Integer.MAX_VALUE))
    assertEquals(rational("68719476736"), rational("-32") * p_int(Integer.MIN_VALUE))

    assertEquals(rational("0.000"), rational("-32.456") * p_int(0))
    assertEquals(rational("-32.456"), rational("-32.456") * p_int(1))
    assertEquals(rational("32.456"), rational("-32.456") * p_int(-1))
    assertEquals(rational("-746.488"), rational("-32.456") * p_int(23))
    assertEquals(rational("1038.592"), rational("-32.456") * p_int(-32))
    assertEquals(rational("-69698729247.032"), rational("-32.456") * p_int(Integer.MAX_VALUE))
    assertEquals(rational("69698729279.488"), rational("-32.456") * p_int(Integer.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * p_int(0))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_int(1))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_int(-1))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * p_int(23))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("123456789012345678901234567890.123456789") * p_int(-32))
    assertEquals(rational("265121435515141626551514162655151416265.488629483"), rational("123456789012345678901234567890.123456789") * p_int(Integer.MAX_VALUE))
    assertEquals(rational("-265121435638598415563859841556385984155.612086272"), rational("123456789012345678901234567890.123456789") * p_int(Integer.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * p_int(0))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_int(1))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_int(-1))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * p_int(23))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-123456789012345678901234567890.123456789") * p_int(-32))
    assertEquals(rational("-265121435515141626551514162655151416265.488629483"), rational("-123456789012345678901234567890.123456789") * p_int(Integer.MAX_VALUE))
    assertEquals(rational("265121435638598415563859841556385984155.612086272"), rational("-123456789012345678901234567890.123456789") * p_int(Integer.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * p_int(0)))
  }

  function testRationalIntegerMultiplication() {
    assertEquals(rational("0"), rational("0") * b_int(0))
    assertEquals(rational("0"), rational("0") * b_int(1))
    assertEquals(rational("0"), rational("0") * b_int(-1))
    assertEquals(rational("0"), rational("0") * b_int(23))
    assertEquals(rational("0"), rational("0") * b_int(-32))
    assertEquals(rational("0"), rational("0") * b_int(Integer.MAX_VALUE))
    assertEquals(rational("0"), rational("0") * b_int(Integer.MIN_VALUE))

    assertEquals(rational("0"), rational("1") * b_int(0))
    assertEquals(rational("1"), rational("1") * b_int(1))
    assertEquals(rational("-1"), rational("1") * b_int(-1))
    assertEquals(rational("23"), rational("1") * b_int(23))
    assertEquals(rational("-32"), rational("1") * b_int(-32))
    assertEquals(rational("2147483647"), rational("1") * b_int(Integer.MAX_VALUE))
    assertEquals(rational("-2147483648"), rational("1") * b_int(Integer.MIN_VALUE))

    assertEquals(rational("0"), rational("-1") * b_int(0))
    assertEquals(rational("-1"), rational("-1") * b_int(1))
    assertEquals(rational("1"), rational("-1") * b_int(-1))
    assertEquals(rational("-23"), rational("-1") * b_int(23))
    assertEquals(rational("32"), rational("-1") * b_int(-32))
    assertEquals(rational("-2147483647"), rational("-1") * b_int(Integer.MAX_VALUE))
    assertEquals(rational("2147483648"), rational("-1") * b_int(Integer.MIN_VALUE))

    assertEquals(rational("0"), rational("23") * b_int(0))
    assertEquals(rational("23"), rational("23") * b_int(1))
    assertEquals(rational("-23"), rational("23") * b_int(-1))
    assertEquals(rational("529"), rational("23") * b_int(23))
    assertEquals(rational("-736"), rational("23") * b_int(-32))
    assertEquals(rational("49392123881"), rational("23") * b_int(Integer.MAX_VALUE))
    assertEquals(rational("-49392123904"), rational("23") * b_int(Integer.MIN_VALUE))

    assertEquals(rational("0.000"), rational("23.123") * b_int(0))
    assertEquals(rational("23.123"), rational("23.123") * b_int(1))
    assertEquals(rational("-23.123"), rational("23.123") * b_int(-1))
    assertEquals(rational("531.829"), rational("23.123") * b_int(23))
    assertEquals(rational("-739.936"), rational("23.123") * b_int(-32))
    assertEquals(rational("49656264369.581"), rational("23.123") * b_int(Integer.MAX_VALUE))
    assertEquals(rational("-49656264392.704"), rational("23.123") * b_int(Integer.MIN_VALUE))

    assertEquals(rational("0"), rational("-32") * b_int(0))
    assertEquals(rational("-32"), rational("-32") * b_int(1))
    assertEquals(rational("32"), rational("-32") * b_int(-1))
    assertEquals(rational("-736"), rational("-32") * b_int(23))
    assertEquals(rational("1024"), rational("-32") * b_int(-32))
    assertEquals(rational("-68719476704"), rational("-32") * b_int(Integer.MAX_VALUE))
    assertEquals(rational("68719476736"), rational("-32") * b_int(Integer.MIN_VALUE))

    assertEquals(rational("0.000"), rational("-32.456") * b_int(0))
    assertEquals(rational("-32.456"), rational("-32.456") * b_int(1))
    assertEquals(rational("32.456"), rational("-32.456") * b_int(-1))
    assertEquals(rational("-746.488"), rational("-32.456") * b_int(23))
    assertEquals(rational("1038.592"), rational("-32.456") * b_int(-32))
    assertEquals(rational("-69698729247.032"), rational("-32.456") * b_int(Integer.MAX_VALUE))
    assertEquals(rational("69698729279.488"), rational("-32.456") * b_int(Integer.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * b_int(0))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * b_int(1))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * b_int(-1))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * b_int(23))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("123456789012345678901234567890.123456789") * b_int(-32))
    assertEquals(rational("265121435515141626551514162655151416265.488629483"), rational("123456789012345678901234567890.123456789") * b_int(Integer.MAX_VALUE))
    assertEquals(rational("-265121435638598415563859841556385984155.612086272"), rational("123456789012345678901234567890.123456789") * b_int(Integer.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * b_int(0))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * b_int(1))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * b_int(-1))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * b_int(23))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-123456789012345678901234567890.123456789") * b_int(-32))
    assertEquals(rational("-265121435515141626551514162655151416265.488629483"), rational("-123456789012345678901234567890.123456789") * b_int(Integer.MAX_VALUE))
    assertEquals(rational("265121435638598415563859841556385984155.612086272"), rational("-123456789012345678901234567890.123456789") * b_int(Integer.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * b_int(0)))
  }

  function testRationalPLongMultiplication() {
    assertEquals(rational("0"), rational("0") * p_long(0))
    assertEquals(rational("0"), rational("0") * p_long(1))
    assertEquals(rational("0"), rational("0") * p_long(-1))
    assertEquals(rational("0"), rational("0") * p_long(23))
    assertEquals(rational("0"), rational("0") * p_long(-32))
    assertEquals(rational("0"), rational("0") * p_long(Long.MAX_VALUE))
    assertEquals(rational("0"), rational("0") * p_long(Long.MIN_VALUE))

    assertEquals(rational("0"), rational("1") * p_long(0))
    assertEquals(rational("1"), rational("1") * p_long(1))
    assertEquals(rational("-1"), rational("1") * p_long(-1))
    assertEquals(rational("23"), rational("1") * p_long(23))
    assertEquals(rational("-32"), rational("1") * p_long(-32))
    assertEquals(rational("9223372036854775807"), rational("1") * p_long(Long.MAX_VALUE))
    assertEquals(rational("-9223372036854775808"), rational("1") * p_long(Long.MIN_VALUE))

    assertEquals(rational("0"), rational("-1") * p_long(0))
    assertEquals(rational("-1"), rational("-1") * p_long(1))
    assertEquals(rational("1"), rational("-1") * p_long(-1))
    assertEquals(rational("-23"), rational("-1") * p_long(23))
    assertEquals(rational("32"), rational("-1") * p_long(-32))
    assertEquals(rational("-9223372036854775807"), rational("-1") * p_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775808"), rational("-1") * p_long(Long.MIN_VALUE))

    assertEquals(rational("0"), rational("23") * p_long(0))
    assertEquals(rational("23"), rational("23") * p_long(1))
    assertEquals(rational("-23"), rational("23") * p_long(-1))
    assertEquals(rational("529"), rational("23") * p_long(23))
    assertEquals(rational("-736"), rational("23") * p_long(-32))
    assertEquals(rational("212137556847659843561"), rational("23") * p_long(Long.MAX_VALUE))
    assertEquals(rational("-212137556847659843584"), rational("23") * p_long(Long.MIN_VALUE))

    assertEquals(rational("0.000"), rational("23.123") * p_long(0))
    assertEquals(rational("23.123"), rational("23.123") * p_long(1))
    assertEquals(rational("-23.123"), rational("23.123") * p_long(-1))
    assertEquals(rational("531.829"), rational("23.123") * p_long(23))
    assertEquals(rational("-739.936"), rational("23.123") * p_long(-32))
    assertEquals(rational("213272031608192980985.261"), rational("23.123") * p_long(Long.MAX_VALUE))
    assertEquals(rational("-213272031608192981008.384"), rational("23.123") * p_long(Long.MIN_VALUE))

    assertEquals(rational("0"), rational("-32") * p_long(0))
    assertEquals(rational("-32"), rational("-32") * p_long(1))
    assertEquals(rational("32"), rational("-32") * p_long(-1))
    assertEquals(rational("-736"), rational("-32") * p_long(23))
    assertEquals(rational("1024"), rational("-32") * p_long(-32))
    assertEquals(rational("-295147905179352825824"), rational("-32") * p_long(Long.MAX_VALUE))
    assertEquals(rational("295147905179352825856"), rational("-32") * p_long(Long.MIN_VALUE))

    assertEquals(rational("0.000"), rational("-32.456") * p_long(0))
    assertEquals(rational("-32.456"), rational("-32.456") * p_long(1))
    assertEquals(rational("32.456"), rational("-32.456") * p_long(-1))
    assertEquals(rational("-746.488"), rational("-32.456") * p_long(23))
    assertEquals(rational("1038.592"), rational("-32.456") * p_long(-32))
    assertEquals(rational("-299353762828158603591.992"), rational("-32.456") * p_long(Long.MAX_VALUE))
    assertEquals(rational("299353762828158603624.448"), rational("-32.456") * p_long(Long.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * p_long(0))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_long(1))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * p_long(-1))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * p_long(23))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("123456789012345678901234567890.123456789") * p_long(-32))
    assertEquals(rational("1138687895536349070000738630000073862999893517510.447103723"), rational("123456789012345678901234567890.123456789") * p_long(Long.MAX_VALUE))
    assertEquals(rational("-1138687895536349070124195419012419541901128085400.570560512"), rational("123456789012345678901234567890.123456789") * p_long(Long.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * p_long(0))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_long(1))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * p_long(-1))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * p_long(23))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-123456789012345678901234567890.123456789") * p_long(-32))
    assertEquals(rational("-1138687895536349070000738630000073862999893517510.447103723"), rational("-123456789012345678901234567890.123456789") * p_long(Long.MAX_VALUE))
    assertEquals(rational("1138687895536349070124195419012419541901128085400.570560512"), rational("-123456789012345678901234567890.123456789") * p_long(Long.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * p_long(0)))
  }

  function testRationalLongMultiplication() {
    assertEquals(rational("0"), rational("0") * b_long(0))
    assertEquals(rational("0"), rational("0") * b_long(1))
    assertEquals(rational("0"), rational("0") * b_long(-1))
    assertEquals(rational("0"), rational("0") * b_long(23))
    assertEquals(rational("0"), rational("0") * b_long(-32))
    assertEquals(rational("0"), rational("0") * b_long(Long.MAX_VALUE))
    assertEquals(rational("0"), rational("0") * b_long(Long.MIN_VALUE))

    assertEquals(rational("0"), rational("1") * b_long(0))
    assertEquals(rational("1"), rational("1") * b_long(1))
    assertEquals(rational("-1"), rational("1") * b_long(-1))
    assertEquals(rational("23"), rational("1") * b_long(23))
    assertEquals(rational("-32"), rational("1") * b_long(-32))
    assertEquals(rational("9223372036854775807"), rational("1") * b_long(Long.MAX_VALUE))
    assertEquals(rational("-9223372036854775808"), rational("1") * b_long(Long.MIN_VALUE))

    assertEquals(rational("0"), rational("-1") * b_long(0))
    assertEquals(rational("-1"), rational("-1") * b_long(1))
    assertEquals(rational("1"), rational("-1") * b_long(-1))
    assertEquals(rational("-23"), rational("-1") * b_long(23))
    assertEquals(rational("32"), rational("-1") * b_long(-32))
    assertEquals(rational("-9223372036854775807"), rational("-1") * b_long(Long.MAX_VALUE))
    assertEquals(rational("9223372036854775808"), rational("-1") * b_long(Long.MIN_VALUE))

    assertEquals(rational("0"), rational("23") * b_long(0))
    assertEquals(rational("23"), rational("23") * b_long(1))
    assertEquals(rational("-23"), rational("23") * b_long(-1))
    assertEquals(rational("529"), rational("23") * b_long(23))
    assertEquals(rational("-736"), rational("23") * b_long(-32))
    assertEquals(rational("212137556847659843561"), rational("23") * b_long(Long.MAX_VALUE))
    assertEquals(rational("-212137556847659843584"), rational("23") * b_long(Long.MIN_VALUE))

    assertEquals(rational("0.000"), rational("23.123") * b_long(0))
    assertEquals(rational("23.123"), rational("23.123") * b_long(1))
    assertEquals(rational("-23.123"), rational("23.123") * b_long(-1))
    assertEquals(rational("531.829"), rational("23.123") * b_long(23))
    assertEquals(rational("-739.936"), rational("23.123") * b_long(-32))
    assertEquals(rational("213272031608192980985.261"), rational("23.123") * b_long(Long.MAX_VALUE))
    assertEquals(rational("-213272031608192981008.384"), rational("23.123") * b_long(Long.MIN_VALUE))

    assertEquals(rational("0"), rational("-32") * b_long(0))
    assertEquals(rational("-32"), rational("-32") * b_long(1))
    assertEquals(rational("32"), rational("-32") * b_long(-1))
    assertEquals(rational("-736"), rational("-32") * b_long(23))
    assertEquals(rational("1024"), rational("-32") * b_long(-32))
    assertEquals(rational("-295147905179352825824"), rational("-32") * b_long(Long.MAX_VALUE))
    assertEquals(rational("295147905179352825856"), rational("-32") * b_long(Long.MIN_VALUE))

    assertEquals(rational("0.000"), rational("-32.456") * b_long(0))
    assertEquals(rational("-32.456"), rational("-32.456") * b_long(1))
    assertEquals(rational("32.456"), rational("-32.456") * b_long(-1))
    assertEquals(rational("-746.488"), rational("-32.456") * b_long(23))
    assertEquals(rational("1038.592"), rational("-32.456") * b_long(-32))
    assertEquals(rational("-299353762828158603591.992"), rational("-32.456") * b_long(Long.MAX_VALUE))
    assertEquals(rational("299353762828158603624.448"), rational("-32.456") * b_long(Long.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * b_long(0))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * b_long(1))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * b_long(-1))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * b_long(23))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("123456789012345678901234567890.123456789") * b_long(-32))
    assertEquals(rational("1138687895536349070000738630000073862999893517510.447103723"), rational("123456789012345678901234567890.123456789") * b_long(Long.MAX_VALUE))
    assertEquals(rational("-1138687895536349070124195419012419541901128085400.570560512"), rational("123456789012345678901234567890.123456789") * b_long(Long.MIN_VALUE))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * b_long(0))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * b_long(1))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * b_long(-1))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * b_long(23))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-123456789012345678901234567890.123456789") * b_long(-32))
    assertEquals(rational("-1138687895536349070000738630000073862999893517510.447103723"), rational("-123456789012345678901234567890.123456789") * b_long(Long.MAX_VALUE))
    assertEquals(rational("1138687895536349070124195419012419541901128085400.570560512"), rational("-123456789012345678901234567890.123456789") * b_long(Long.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * b_long(0)))
  }

  function testRationalPFloatMultiplication() {
    assertEquals(rational("0.0"), rational("0") * p_float(0.0))
    assertEquals(rational("0.0"), rational("0") * p_float(1.0))
    assertEquals(rational("0.0"), rational("0") * p_float(-1.0))
    assertEquals(rational("0.0"), rational("0") * p_float(23.0))
    assertEquals(rational("0.000"), rational("0") * p_float(23.123))
    assertEquals(rational("0.0"), rational("0") * p_float(-32.0))
    assertEquals(rational("0.000"), rational("0") * p_float(-32.456))
    // Skipped test assertEquals(something, rational("0") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - p_float(Float.NaN_))
    assertEquals(rational("0E+31"), rational("0") * p_float(Float.MAX_VALUE))
    assertEquals(rational("0E-46"), rational("0") * p_float(Float.MIN_VALUE))

    assertEquals(rational("0.0"), rational("1") * p_float(0.0))
    assertEquals(rational("1.0"), rational("1") * p_float(1.0))
    assertEquals(rational("-1.0"), rational("1") * p_float(-1.0))
    assertEquals(rational("23.0"), rational("1") * p_float(23.0))
    assertEquals(rational("23.123"), rational("1") * p_float(23.123))
    assertEquals(rational("-32.0"), rational("1") * p_float(-32.0))
    assertEquals(rational("-32.456"), rational("1") * p_float(-32.456))
    // Skipped test assertEquals(something, rational("1") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("1") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("1") - p_float(Float.NaN_))
    assertEquals(rational("3.4028235E+38"), rational("1") * p_float(Float.MAX_VALUE))
    assertEquals(rational("1.4E-45"), rational("1") * p_float(Float.MIN_VALUE))

    assertEquals(rational("0.0"), rational("-1") * p_float(0.0))
    assertEquals(rational("-1.0"), rational("-1") * p_float(1.0))
    assertEquals(rational("1.0"), rational("-1") * p_float(-1.0))
    assertEquals(rational("-23.0"), rational("-1") * p_float(23.0))
    assertEquals(rational("-23.123"), rational("-1") * p_float(23.123))
    assertEquals(rational("32.0"), rational("-1") * p_float(-32.0))
    assertEquals(rational("32.456"), rational("-1") * p_float(-32.456))
    // Skipped test assertEquals(something, rational("-1") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-1") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-1") - p_float(Float.NaN_))
    assertEquals(rational("-3.4028235E+38"), rational("-1") * p_float(Float.MAX_VALUE))
    assertEquals(rational("-1.4E-45"), rational("-1") * p_float(Float.MIN_VALUE))

    assertEquals(rational("0.0"), rational("23") * p_float(0.0))
    assertEquals(rational("23.0"), rational("23") * p_float(1.0))
    assertEquals(rational("-23.0"), rational("23") * p_float(-1.0))
    assertEquals(rational("529.0"), rational("23") * p_float(23.0))
    assertEquals(rational("531.829"), rational("23") * p_float(23.123))
    assertEquals(rational("-736.0"), rational("23") * p_float(-32.0))
    assertEquals(rational("-746.488"), rational("23") * p_float(-32.456))
    // Skipped test assertEquals(something, rational("23") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - p_float(Float.NaN_))
    assertEquals(rational("7.82649405E+39"), rational("23") * p_float(Float.MAX_VALUE))
    assertEquals(rational("3.22E-44"), rational("23") * p_float(Float.MIN_VALUE))

    assertEquals(rational("0.0000"), rational("23.123") * p_float(0.0))
    assertEquals(rational("23.1230"), rational("23.123") * p_float(1.0))
    assertEquals(rational("-23.1230"), rational("23.123") * p_float(-1.0))
    assertEquals(rational("531.8290"), rational("23.123") * p_float(23.0))
    assertEquals(rational("534.673129"), rational("23.123") * p_float(23.123))
    assertEquals(rational("-739.9360"), rational("23.123") * p_float(-32.0))
    assertEquals(rational("-750.480088"), rational("23.123") * p_float(-32.456))
    // Skipped test assertEquals(something, rational("23.123") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - p_float(Float.NaN_))
    assertEquals(rational("7.86834877905E+39"), rational("23.123") * p_float(Float.MAX_VALUE))
    assertEquals(rational("3.23722E-44"), rational("23.123") * p_float(Float.MIN_VALUE))

    assertEquals(rational("0.0"), rational("-32") * p_float(0.0))
    assertEquals(rational("-32.0"), rational("-32") * p_float(1.0))
    assertEquals(rational("32.0"), rational("-32") * p_float(-1.0))
    assertEquals(rational("-736.0"), rational("-32") * p_float(23.0))
    assertEquals(rational("-739.936"), rational("-32") * p_float(23.123))
    assertEquals(rational("1024.0"), rational("-32") * p_float(-32.0))
    assertEquals(rational("1038.592"), rational("-32") * p_float(-32.456))
    // Skipped test assertEquals(something, rational("-32") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - p_float(Float.NaN_))
    assertEquals(rational("-1.088903520E+40"), rational("-32") * p_float(Float.MAX_VALUE))
    assertEquals(rational("-4.48E-44"), rational("-32") * p_float(Float.MIN_VALUE))

    assertEquals(rational("0.0000"), rational("-32.456") * p_float(0.0))
    assertEquals(rational("-32.4560"), rational("-32.456") * p_float(1.0))
    assertEquals(rational("32.4560"), rational("-32.456") * p_float(-1.0))
    assertEquals(rational("-746.4880"), rational("-32.456") * p_float(23.0))
    assertEquals(rational("-750.480088"), rational("-32.456") * p_float(23.123))
    assertEquals(rational("1038.5920"), rational("-32.456") * p_float(-32.0))
    assertEquals(rational("1053.391936"), rational("-32.456") * p_float(-32.456))
    // Skipped test assertEquals(something, rational("-32.456") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - p_float(Float.NaN_))
    assertEquals(rational("-1.104420395160E+40"), rational("-32.456") * p_float(Float.MAX_VALUE))
    assertEquals(rational("-4.54384E-44"), rational("-32.456") * p_float(Float.MIN_VALUE))

    assertEquals(rational("0E-10"), rational("123456789012345678901234567890.123456789") * p_float(0.0))
    assertEquals(rational("123456789012345678901234567890.1234567890"), rational("123456789012345678901234567890.123456789") * p_float(1.0))
    assertEquals(rational("-123456789012345678901234567890.1234567890"), rational("123456789012345678901234567890.123456789") * p_float(-1.0))
    assertEquals(rational("2839506147283950614728395061472.8395061470"), rational("123456789012345678901234567890.123456789") * p_float(23.0))
    assertEquals(rational("2854691332332469133233246913323.324691332047"), rational("123456789012345678901234567890.123456789") * p_float(23.123))
    assertEquals(rational("-3950617248395061724839506172483.9506172480"), rational("123456789012345678901234567890.123456789") * p_float(-32.0))
    assertEquals(rational("-4006913544184691354418469135441.846913543784"), rational("123456789012345678901234567890.123456789") * p_float(-32.456))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_float(Float.NaN_))
    assertEquals(rational("4.201016628857516662885751666288575166628437415E+67"), rational("123456789012345678901234567890.123456789") * p_float(Float.MAX_VALUE))
    assertEquals(rational("1.728395046172839504617283950461728395046E-16"), rational("123456789012345678901234567890.123456789") * p_float(Float.MIN_VALUE))

    assertEquals(rational("0E-10"), rational("-123456789012345678901234567890.123456789") * p_float(0.0))
    assertEquals(rational("-123456789012345678901234567890.1234567890"), rational("-123456789012345678901234567890.123456789") * p_float(1.0))
    assertEquals(rational("123456789012345678901234567890.1234567890"), rational("-123456789012345678901234567890.123456789") * p_float(-1.0))
    assertEquals(rational("-2839506147283950614728395061472.8395061470"), rational("-123456789012345678901234567890.123456789") * p_float(23.0))
    assertEquals(rational("-2854691332332469133233246913323.324691332047"), rational("-123456789012345678901234567890.123456789") * p_float(23.123))
    assertEquals(rational("3950617248395061724839506172483.9506172480"), rational("-123456789012345678901234567890.123456789") * p_float(-32.0))
    assertEquals(rational("4006913544184691354418469135441.846913543784"), rational("-123456789012345678901234567890.123456789") * p_float(-32.456))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_float(Float.NaN_))
    assertEquals(rational("-4.201016628857516662885751666288575166628437415E+67"), rational("-123456789012345678901234567890.123456789") * p_float(Float.MAX_VALUE))
    assertEquals(rational("-1.728395046172839504617283950461728395046E-16"), rational("-123456789012345678901234567890.123456789") * p_float(Float.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * p_float(0.0)))
  }

  function testRationalFloatMultiplication() {
    assertEquals(rational("0.0"), rational("0") * b_float(0.0))
    assertEquals(rational("0.0"), rational("0") * b_float(1.0))
    assertEquals(rational("0.0"), rational("0") * b_float(-1.0))
    assertEquals(rational("0.0"), rational("0") * b_float(23.0))
    assertEquals(rational("0.000"), rational("0") * b_float(23.123))
    assertEquals(rational("0.0"), rational("0") * b_float(-32.0))
    assertEquals(rational("0.000"), rational("0") * b_float(-32.456))
    // Skipped test assertEquals(something, rational("0") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - b_float(Float.NaN_))
    assertEquals(rational("0E+31"), rational("0") * b_float(Float.MAX_VALUE))
    assertEquals(rational("0E-46"), rational("0") * b_float(Float.MIN_VALUE))

    assertEquals(rational("0.0"), rational("1") * b_float(0.0))
    assertEquals(rational("1.0"), rational("1") * b_float(1.0))
    assertEquals(rational("-1.0"), rational("1") * b_float(-1.0))
    assertEquals(rational("23.0"), rational("1") * b_float(23.0))
    assertEquals(rational("23.123"), rational("1") * b_float(23.123))
    assertEquals(rational("-32.0"), rational("1") * b_float(-32.0))
    assertEquals(rational("-32.456"), rational("1") * b_float(-32.456))
    // Skipped test assertEquals(something, rational("1") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("1") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("1") - b_float(Float.NaN_))
    assertEquals(rational("3.4028235E+38"), rational("1") * b_float(Float.MAX_VALUE))
    assertEquals(rational("1.4E-45"), rational("1") * b_float(Float.MIN_VALUE))

    assertEquals(rational("0.0"), rational("-1") * b_float(0.0))
    assertEquals(rational("-1.0"), rational("-1") * b_float(1.0))
    assertEquals(rational("1.0"), rational("-1") * b_float(-1.0))
    assertEquals(rational("-23.0"), rational("-1") * b_float(23.0))
    assertEquals(rational("-23.123"), rational("-1") * b_float(23.123))
    assertEquals(rational("32.0"), rational("-1") * b_float(-32.0))
    assertEquals(rational("32.456"), rational("-1") * b_float(-32.456))
    // Skipped test assertEquals(something, rational("-1") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-1") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-1") - b_float(Float.NaN_))
    assertEquals(rational("-3.4028235E+38"), rational("-1") * b_float(Float.MAX_VALUE))
    assertEquals(rational("-1.4E-45"), rational("-1") * b_float(Float.MIN_VALUE))

    assertEquals(rational("0.0"), rational("23") * b_float(0.0))
    assertEquals(rational("23.0"), rational("23") * b_float(1.0))
    assertEquals(rational("-23.0"), rational("23") * b_float(-1.0))
    assertEquals(rational("529.0"), rational("23") * b_float(23.0))
    assertEquals(rational("531.829"), rational("23") * b_float(23.123))
    assertEquals(rational("-736.0"), rational("23") * b_float(-32.0))
    assertEquals(rational("-746.488"), rational("23") * b_float(-32.456))
    // Skipped test assertEquals(something, rational("23") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - b_float(Float.NaN_))
    assertEquals(rational("7.82649405E+39"), rational("23") * b_float(Float.MAX_VALUE))
    assertEquals(rational("3.22E-44"), rational("23") * b_float(Float.MIN_VALUE))

    assertEquals(rational("0.0000"), rational("23.123") * b_float(0.0))
    assertEquals(rational("23.1230"), rational("23.123") * b_float(1.0))
    assertEquals(rational("-23.1230"), rational("23.123") * b_float(-1.0))
    assertEquals(rational("531.8290"), rational("23.123") * b_float(23.0))
    assertEquals(rational("534.673129"), rational("23.123") * b_float(23.123))
    assertEquals(rational("-739.9360"), rational("23.123") * b_float(-32.0))
    assertEquals(rational("-750.480088"), rational("23.123") * b_float(-32.456))
    // Skipped test assertEquals(something, rational("23.123") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - b_float(Float.NaN_))
    assertEquals(rational("7.86834877905E+39"), rational("23.123") * b_float(Float.MAX_VALUE))
    assertEquals(rational("3.23722E-44"), rational("23.123") * b_float(Float.MIN_VALUE))

    assertEquals(rational("0.0"), rational("-32") * b_float(0.0))
    assertEquals(rational("-32.0"), rational("-32") * b_float(1.0))
    assertEquals(rational("32.0"), rational("-32") * b_float(-1.0))
    assertEquals(rational("-736.0"), rational("-32") * b_float(23.0))
    assertEquals(rational("-739.936"), rational("-32") * b_float(23.123))
    assertEquals(rational("1024.0"), rational("-32") * b_float(-32.0))
    assertEquals(rational("1038.592"), rational("-32") * b_float(-32.456))
    // Skipped test assertEquals(something, rational("-32") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - b_float(Float.NaN_))
    assertEquals(rational("-1.088903520E+40"), rational("-32") * b_float(Float.MAX_VALUE))
    assertEquals(rational("-4.48E-44"), rational("-32") * b_float(Float.MIN_VALUE))

    assertEquals(rational("0.0000"), rational("-32.456") * b_float(0.0))
    assertEquals(rational("-32.4560"), rational("-32.456") * b_float(1.0))
    assertEquals(rational("32.4560"), rational("-32.456") * b_float(-1.0))
    assertEquals(rational("-746.4880"), rational("-32.456") * b_float(23.0))
    assertEquals(rational("-750.480088"), rational("-32.456") * b_float(23.123))
    assertEquals(rational("1038.5920"), rational("-32.456") * b_float(-32.0))
    assertEquals(rational("1053.391936"), rational("-32.456") * b_float(-32.456))
    // Skipped test assertEquals(something, rational("-32.456") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - b_float(Float.NaN_))
    assertEquals(rational("-1.104420395160E+40"), rational("-32.456") * b_float(Float.MAX_VALUE))
    assertEquals(rational("-4.54384E-44"), rational("-32.456") * b_float(Float.MIN_VALUE))

    assertEquals(rational("0E-10"), rational("123456789012345678901234567890.123456789") * b_float(0.0))
    assertEquals(rational("123456789012345678901234567890.1234567890"), rational("123456789012345678901234567890.123456789") * b_float(1.0))
    assertEquals(rational("-123456789012345678901234567890.1234567890"), rational("123456789012345678901234567890.123456789") * b_float(-1.0))
    assertEquals(rational("2839506147283950614728395061472.8395061470"), rational("123456789012345678901234567890.123456789") * b_float(23.0))
    assertEquals(rational("2854691332332469133233246913323.324691332047"), rational("123456789012345678901234567890.123456789") * b_float(23.123))
    assertEquals(rational("-3950617248395061724839506172483.9506172480"), rational("123456789012345678901234567890.123456789") * b_float(-32.0))
    assertEquals(rational("-4006913544184691354418469135441.846913543784"), rational("123456789012345678901234567890.123456789") * b_float(-32.456))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_float(Float.NaN_))
    assertEquals(rational("4.201016628857516662885751666288575166628437415E+67"), rational("123456789012345678901234567890.123456789") * b_float(Float.MAX_VALUE))
    assertEquals(rational("1.728395046172839504617283950461728395046E-16"), rational("123456789012345678901234567890.123456789") * b_float(Float.MIN_VALUE))

    assertEquals(rational("0E-10"), rational("-123456789012345678901234567890.123456789") * b_float(0.0))
    assertEquals(rational("-123456789012345678901234567890.1234567890"), rational("-123456789012345678901234567890.123456789") * b_float(1.0))
    assertEquals(rational("123456789012345678901234567890.1234567890"), rational("-123456789012345678901234567890.123456789") * b_float(-1.0))
    assertEquals(rational("-2839506147283950614728395061472.8395061470"), rational("-123456789012345678901234567890.123456789") * b_float(23.0))
    assertEquals(rational("-2854691332332469133233246913323.324691332047"), rational("-123456789012345678901234567890.123456789") * b_float(23.123))
    assertEquals(rational("3950617248395061724839506172483.9506172480"), rational("-123456789012345678901234567890.123456789") * b_float(-32.0))
    assertEquals(rational("4006913544184691354418469135441.846913543784"), rational("-123456789012345678901234567890.123456789") * b_float(-32.456))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_float(Float.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_float(Float.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_float(Float.NaN_))
    assertEquals(rational("-4.201016628857516662885751666288575166628437415E+67"), rational("-123456789012345678901234567890.123456789") * b_float(Float.MAX_VALUE))
    assertEquals(rational("-1.728395046172839504617283950461728395046E-16"), rational("-123456789012345678901234567890.123456789") * b_float(Float.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * b_float(0.0)))
  }

  function testRationalPDoubleMultiplication() {
    assertEquals(rational("0.0"), rational("0") * p_double(0.0))
    assertEquals(rational("0.0"), rational("0") * p_double(1.0))
    assertEquals(rational("0.0"), rational("0") * p_double(-1.0))
    assertEquals(rational("0.0"), rational("0") * p_double(23.0))
    assertEquals(rational("0.000"), rational("0") * p_double(23.123))
    assertEquals(rational("0.0"), rational("0") * p_double(-32.0))
    assertEquals(rational("0.000"), rational("0") * p_double(-32.456))
    // Skipped test assertEquals(something, rational("0") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - p_double(Double.NaN_))
    assertEquals(rational("0E+292"), rational("0") * p_double(Double.MAX_VALUE))
    assertEquals(rational("0E-325"), rational("0") * p_double(Double.MIN_VALUE))

    assertEquals(rational("0.0"), rational("1") * p_double(0.0))
    assertEquals(rational("1.0"), rational("1") * p_double(1.0))
    assertEquals(rational("-1.0"), rational("1") * p_double(-1.0))
    assertEquals(rational("23.0"), rational("1") * p_double(23.0))
    assertEquals(rational("23.123"), rational("1") * p_double(23.123))
    assertEquals(rational("-32.0"), rational("1") * p_double(-32.0))
    assertEquals(rational("-32.456"), rational("1") * p_double(-32.456))
    // Skipped test assertEquals(something, rational("1") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("1") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("1") - p_double(Double.NaN_))
    assertEquals(rational("1.7976931348623157E+308"), rational("1") * p_double(Double.MAX_VALUE))
    assertEquals(rational("4.9E-324"), rational("1") * p_double(Double.MIN_VALUE))

    assertEquals(rational("0.0"), rational("-1") * p_double(0.0))
    assertEquals(rational("-1.0"), rational("-1") * p_double(1.0))
    assertEquals(rational("1.0"), rational("-1") * p_double(-1.0))
    assertEquals(rational("-23.0"), rational("-1") * p_double(23.0))
    assertEquals(rational("-23.123"), rational("-1") * p_double(23.123))
    assertEquals(rational("32.0"), rational("-1") * p_double(-32.0))
    assertEquals(rational("32.456"), rational("-1") * p_double(-32.456))
    // Skipped test assertEquals(something, rational("-1") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-1") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-1") - p_double(Double.NaN_))
    assertEquals(rational("-1.7976931348623157E+308"), rational("-1") * p_double(Double.MAX_VALUE))
    assertEquals(rational("-4.9E-324"), rational("-1") * p_double(Double.MIN_VALUE))

    assertEquals(rational("0.0"), rational("23") * p_double(0.0))
    assertEquals(rational("23.0"), rational("23") * p_double(1.0))
    assertEquals(rational("-23.0"), rational("23") * p_double(-1.0))
    assertEquals(rational("529.0"), rational("23") * p_double(23.0))
    assertEquals(rational("531.829"), rational("23") * p_double(23.123))
    assertEquals(rational("-736.0"), rational("23") * p_double(-32.0))
    assertEquals(rational("-746.488"), rational("23") * p_double(-32.456))
    // Skipped test assertEquals(something, rational("23") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - p_double(Double.NaN_))
    assertEquals(rational("4.13469421018332611E+309"), rational("23") * p_double(Double.MAX_VALUE))
    assertEquals(rational("1.127E-322"), rational("23") * p_double(Double.MIN_VALUE))

    assertEquals(rational("0.0000"), rational("23.123") * p_double(0.0))
    assertEquals(rational("23.1230"), rational("23.123") * p_double(1.0))
    assertEquals(rational("-23.1230"), rational("23.123") * p_double(-1.0))
    assertEquals(rational("531.8290"), rational("23.123") * p_double(23.0))
    assertEquals(rational("534.673129"), rational("23.123") * p_double(23.123))
    assertEquals(rational("-739.9360"), rational("23.123") * p_double(-32.0))
    assertEquals(rational("-750.480088"), rational("23.123") * p_double(-32.456))
    // Skipped test assertEquals(something, rational("23.123") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - p_double(Double.NaN_))
    assertEquals(rational("4.15680583574213259311E+309"), rational("23.123") * p_double(Double.MAX_VALUE))
    assertEquals(rational("1.133027E-322"), rational("23.123") * p_double(Double.MIN_VALUE))

    assertEquals(rational("0.0"), rational("-32") * p_double(0.0))
    assertEquals(rational("-32.0"), rational("-32") * p_double(1.0))
    assertEquals(rational("32.0"), rational("-32") * p_double(-1.0))
    assertEquals(rational("-736.0"), rational("-32") * p_double(23.0))
    assertEquals(rational("-739.936"), rational("-32") * p_double(23.123))
    assertEquals(rational("1024.0"), rational("-32") * p_double(-32.0))
    assertEquals(rational("1038.592"), rational("-32") * p_double(-32.456))
    // Skipped test assertEquals(something, rational("-32") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - p_double(Double.NaN_))
    assertEquals(rational("-5.75261803155941024E+309"), rational("-32") * p_double(Double.MAX_VALUE))
    assertEquals(rational("-1.568E-322"), rational("-32") * p_double(Double.MIN_VALUE))

    assertEquals(rational("0.0000"), rational("-32.456") * p_double(0.0))
    assertEquals(rational("-32.4560"), rational("-32.456") * p_double(1.0))
    assertEquals(rational("32.4560"), rational("-32.456") * p_double(-1.0))
    assertEquals(rational("-746.4880"), rational("-32.456") * p_double(23.0))
    assertEquals(rational("-750.480088"), rational("-32.456") * p_double(23.123))
    assertEquals(rational("1038.5920"), rational("-32.456") * p_double(-32.0))
    assertEquals(rational("1053.391936"), rational("-32.456") * p_double(-32.456))
    // Skipped test assertEquals(something, rational("-32.456") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - p_double(Double.NaN_))
    assertEquals(rational("-5.83459283850913183592E+309"), rational("-32.456") * p_double(Double.MAX_VALUE))
    assertEquals(rational("-1.590344E-322"), rational("-32.456") * p_double(Double.MIN_VALUE))

    assertEquals(rational("0E-10"), rational("123456789012345678901234567890.123456789") * p_double(0.0))
    assertEquals(rational("123456789012345678901234567890.1234567890"), rational("123456789012345678901234567890.123456789") * p_double(1.0))
    assertEquals(rational("-123456789012345678901234567890.1234567890"), rational("123456789012345678901234567890.123456789") * p_double(-1.0))
    assertEquals(rational("2839506147283950614728395061472.8395061470"), rational("123456789012345678901234567890.123456789") * p_double(23.0))
    assertEquals(rational("2854691332332469133233246913323.324691332047"), rational("123456789012345678901234567890.123456789") * p_double(23.123))
    assertEquals(rational("-3950617248395061724839506172483.9506172480"), rational("123456789012345678901234567890.123456789") * p_double(-32.0))
    assertEquals(rational("-4006913544184691354418469135441.846913543784"), rational("123456789012345678901234567890.123456789") * p_double(-32.456))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - p_double(Double.NaN_))
    assertEquals(rational("2.219374220596391956322512195632251219563003184534262873E+337"), rational("123456789012345678901234567890.123456789") * p_double(Double.MAX_VALUE))
    assertEquals(rational("6.049382661604938266160493826616049382661E-295"), rational("123456789012345678901234567890.123456789") * p_double(Double.MIN_VALUE))

    assertEquals(rational("0E-10"), rational("-123456789012345678901234567890.123456789") * p_double(0.0))
    assertEquals(rational("-123456789012345678901234567890.1234567890"), rational("-123456789012345678901234567890.123456789") * p_double(1.0))
    assertEquals(rational("123456789012345678901234567890.1234567890"), rational("-123456789012345678901234567890.123456789") * p_double(-1.0))
    assertEquals(rational("-2839506147283950614728395061472.8395061470"), rational("-123456789012345678901234567890.123456789") * p_double(23.0))
    assertEquals(rational("-2854691332332469133233246913323.324691332047"), rational("-123456789012345678901234567890.123456789") * p_double(23.123))
    assertEquals(rational("3950617248395061724839506172483.9506172480"), rational("-123456789012345678901234567890.123456789") * p_double(-32.0))
    assertEquals(rational("4006913544184691354418469135441.846913543784"), rational("-123456789012345678901234567890.123456789") * p_double(-32.456))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - p_double(Double.NaN_))
    assertEquals(rational("-2.219374220596391956322512195632251219563003184534262873E+337"), rational("-123456789012345678901234567890.123456789") * p_double(Double.MAX_VALUE))
    assertEquals(rational("-6.049382661604938266160493826616049382661E-295"), rational("-123456789012345678901234567890.123456789") * p_double(Double.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * p_double(0.0)))
  }

  function testRationalDoubleMultiplication() {
    assertEquals(rational("0.0"), rational("0") * b_double(0.0))
    assertEquals(rational("0.0"), rational("0") * b_double(1.0))
    assertEquals(rational("0.0"), rational("0") * b_double(-1.0))
    assertEquals(rational("0.0"), rational("0") * b_double(23.0))
    assertEquals(rational("0.000"), rational("0") * b_double(23.123))
    assertEquals(rational("0.0"), rational("0") * b_double(-32.0))
    assertEquals(rational("0.000"), rational("0") * b_double(-32.456))
    // Skipped test assertEquals(something, rational("0") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("0") - b_double(Double.NaN_))
    assertEquals(rational("0E+292"), rational("0") * b_double(Double.MAX_VALUE))
    assertEquals(rational("0E-325"), rational("0") * b_double(Double.MIN_VALUE))

    assertEquals(rational("0.0"), rational("1") * b_double(0.0))
    assertEquals(rational("1.0"), rational("1") * b_double(1.0))
    assertEquals(rational("-1.0"), rational("1") * b_double(-1.0))
    assertEquals(rational("23.0"), rational("1") * b_double(23.0))
    assertEquals(rational("23.123"), rational("1") * b_double(23.123))
    assertEquals(rational("-32.0"), rational("1") * b_double(-32.0))
    assertEquals(rational("-32.456"), rational("1") * b_double(-32.456))
    // Skipped test assertEquals(something, rational("1") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("1") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("1") - b_double(Double.NaN_))
    assertEquals(rational("1.7976931348623157E+308"), rational("1") * b_double(Double.MAX_VALUE))
    assertEquals(rational("4.9E-324"), rational("1") * b_double(Double.MIN_VALUE))

    assertEquals(rational("0.0"), rational("-1") * b_double(0.0))
    assertEquals(rational("-1.0"), rational("-1") * b_double(1.0))
    assertEquals(rational("1.0"), rational("-1") * b_double(-1.0))
    assertEquals(rational("-23.0"), rational("-1") * b_double(23.0))
    assertEquals(rational("-23.123"), rational("-1") * b_double(23.123))
    assertEquals(rational("32.0"), rational("-1") * b_double(-32.0))
    assertEquals(rational("32.456"), rational("-1") * b_double(-32.456))
    // Skipped test assertEquals(something, rational("-1") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-1") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-1") - b_double(Double.NaN_))
    assertEquals(rational("-1.7976931348623157E+308"), rational("-1") * b_double(Double.MAX_VALUE))
    assertEquals(rational("-4.9E-324"), rational("-1") * b_double(Double.MIN_VALUE))

    assertEquals(rational("0.0"), rational("23") * b_double(0.0))
    assertEquals(rational("23.0"), rational("23") * b_double(1.0))
    assertEquals(rational("-23.0"), rational("23") * b_double(-1.0))
    assertEquals(rational("529.0"), rational("23") * b_double(23.0))
    assertEquals(rational("531.829"), rational("23") * b_double(23.123))
    assertEquals(rational("-736.0"), rational("23") * b_double(-32.0))
    assertEquals(rational("-746.488"), rational("23") * b_double(-32.456))
    // Skipped test assertEquals(something, rational("23") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23") - b_double(Double.NaN_))
    assertEquals(rational("4.13469421018332611E+309"), rational("23") * b_double(Double.MAX_VALUE))
    assertEquals(rational("1.127E-322"), rational("23") * b_double(Double.MIN_VALUE))

    assertEquals(rational("0.0000"), rational("23.123") * b_double(0.0))
    assertEquals(rational("23.1230"), rational("23.123") * b_double(1.0))
    assertEquals(rational("-23.1230"), rational("23.123") * b_double(-1.0))
    assertEquals(rational("531.8290"), rational("23.123") * b_double(23.0))
    assertEquals(rational("534.673129"), rational("23.123") * b_double(23.123))
    assertEquals(rational("-739.9360"), rational("23.123") * b_double(-32.0))
    assertEquals(rational("-750.480088"), rational("23.123") * b_double(-32.456))
    // Skipped test assertEquals(something, rational("23.123") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("23.123") - b_double(Double.NaN_))
    assertEquals(rational("4.15680583574213259311E+309"), rational("23.123") * b_double(Double.MAX_VALUE))
    assertEquals(rational("1.133027E-322"), rational("23.123") * b_double(Double.MIN_VALUE))

    assertEquals(rational("0.0"), rational("-32") * b_double(0.0))
    assertEquals(rational("-32.0"), rational("-32") * b_double(1.0))
    assertEquals(rational("32.0"), rational("-32") * b_double(-1.0))
    assertEquals(rational("-736.0"), rational("-32") * b_double(23.0))
    assertEquals(rational("-739.936"), rational("-32") * b_double(23.123))
    assertEquals(rational("1024.0"), rational("-32") * b_double(-32.0))
    assertEquals(rational("1038.592"), rational("-32") * b_double(-32.456))
    // Skipped test assertEquals(something, rational("-32") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32") - b_double(Double.NaN_))
    assertEquals(rational("-5.75261803155941024E+309"), rational("-32") * b_double(Double.MAX_VALUE))
    assertEquals(rational("-1.568E-322"), rational("-32") * b_double(Double.MIN_VALUE))

    assertEquals(rational("0.0000"), rational("-32.456") * b_double(0.0))
    assertEquals(rational("-32.4560"), rational("-32.456") * b_double(1.0))
    assertEquals(rational("32.4560"), rational("-32.456") * b_double(-1.0))
    assertEquals(rational("-746.4880"), rational("-32.456") * b_double(23.0))
    assertEquals(rational("-750.480088"), rational("-32.456") * b_double(23.123))
    assertEquals(rational("1038.5920"), rational("-32.456") * b_double(-32.0))
    assertEquals(rational("1053.391936"), rational("-32.456") * b_double(-32.456))
    // Skipped test assertEquals(something, rational("-32.456") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-32.456") - b_double(Double.NaN_))
    assertEquals(rational("-5.83459283850913183592E+309"), rational("-32.456") * b_double(Double.MAX_VALUE))
    assertEquals(rational("-1.590344E-322"), rational("-32.456") * b_double(Double.MIN_VALUE))

    assertEquals(rational("0E-10"), rational("123456789012345678901234567890.123456789") * b_double(0.0))
    assertEquals(rational("123456789012345678901234567890.1234567890"), rational("123456789012345678901234567890.123456789") * b_double(1.0))
    assertEquals(rational("-123456789012345678901234567890.1234567890"), rational("123456789012345678901234567890.123456789") * b_double(-1.0))
    assertEquals(rational("2839506147283950614728395061472.8395061470"), rational("123456789012345678901234567890.123456789") * b_double(23.0))
    assertEquals(rational("2854691332332469133233246913323.324691332047"), rational("123456789012345678901234567890.123456789") * b_double(23.123))
    assertEquals(rational("-3950617248395061724839506172483.9506172480"), rational("123456789012345678901234567890.123456789") * b_double(-32.0))
    assertEquals(rational("-4006913544184691354418469135441.846913543784"), rational("123456789012345678901234567890.123456789") * b_double(-32.456))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("123456789012345678901234567890.123456789") - b_double(Double.NaN_))
    assertEquals(rational("2.219374220596391956322512195632251219563003184534262873E+337"), rational("123456789012345678901234567890.123456789") * b_double(Double.MAX_VALUE))
    assertEquals(rational("6.049382661604938266160493826616049382661E-295"), rational("123456789012345678901234567890.123456789") * b_double(Double.MIN_VALUE))

    assertEquals(rational("0E-10"), rational("-123456789012345678901234567890.123456789") * b_double(0.0))
    assertEquals(rational("-123456789012345678901234567890.1234567890"), rational("-123456789012345678901234567890.123456789") * b_double(1.0))
    assertEquals(rational("123456789012345678901234567890.1234567890"), rational("-123456789012345678901234567890.123456789") * b_double(-1.0))
    assertEquals(rational("-2839506147283950614728395061472.8395061470"), rational("-123456789012345678901234567890.123456789") * b_double(23.0))
    assertEquals(rational("-2854691332332469133233246913323.324691332047"), rational("-123456789012345678901234567890.123456789") * b_double(23.123))
    assertEquals(rational("3950617248395061724839506172483.9506172480"), rational("-123456789012345678901234567890.123456789") * b_double(-32.0))
    assertEquals(rational("4006913544184691354418469135441.846913543784"), rational("-123456789012345678901234567890.123456789") * b_double(-32.456))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_double(Double.POSITIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_double(Double.NEGATIVE_INFINITY))
    // Skipped test assertEquals(something, rational("-123456789012345678901234567890.123456789") - b_double(Double.NaN_))
    assertEquals(rational("-2.219374220596391956322512195632251219563003184534262873E+337"), rational("-123456789012345678901234567890.123456789") * b_double(Double.MAX_VALUE))
    assertEquals(rational("-6.049382661604938266160493826616049382661E-295"), rational("-123456789012345678901234567890.123456789") * b_double(Double.MIN_VALUE))

    assertEquals(Rational, statictypeof(rational("0") * b_double(0.0)))
  }

  function testRationalBigIntegerMultiplication() {
    assertEquals(rational("0"), rational("0") * big_int("0"))
    assertEquals(rational("0"), rational("0") * big_int("1"))
    assertEquals(rational("0"), rational("0") * big_int("-1"))
    assertEquals(rational("0"), rational("0") * big_int("23"))
    assertEquals(rational("0"), rational("0") * big_int("-32"))
    assertEquals(rational("0"), rational("0") * big_int("123456789012345678901234567890"))
    assertEquals(rational("0"), rational("0") * big_int("-123456789012345678901234567890"))

    assertEquals(rational("0"), rational("1") * big_int("0"))
    assertEquals(rational("1"), rational("1") * big_int("1"))
    assertEquals(rational("-1"), rational("1") * big_int("-1"))
    assertEquals(rational("23"), rational("1") * big_int("23"))
    assertEquals(rational("-32"), rational("1") * big_int("-32"))
    assertEquals(rational("123456789012345678901234567890"), rational("1") * big_int("123456789012345678901234567890"))
    assertEquals(rational("-123456789012345678901234567890"), rational("1") * big_int("-123456789012345678901234567890"))

    assertEquals(rational("0"), rational("-1") * big_int("0"))
    assertEquals(rational("-1"), rational("-1") * big_int("1"))
    assertEquals(rational("1"), rational("-1") * big_int("-1"))
    assertEquals(rational("-23"), rational("-1") * big_int("23"))
    assertEquals(rational("32"), rational("-1") * big_int("-32"))
    assertEquals(rational("-123456789012345678901234567890"), rational("-1") * big_int("123456789012345678901234567890"))
    assertEquals(rational("123456789012345678901234567890"), rational("-1") * big_int("-123456789012345678901234567890"))

    assertEquals(rational("0"), rational("23") * big_int("0"))
    assertEquals(rational("23"), rational("23") * big_int("1"))
    assertEquals(rational("-23"), rational("23") * big_int("-1"))
    assertEquals(rational("529"), rational("23") * big_int("23"))
    assertEquals(rational("-736"), rational("23") * big_int("-32"))
    assertEquals(rational("2839506147283950614728395061470"), rational("23") * big_int("123456789012345678901234567890"))
    assertEquals(rational("-2839506147283950614728395061470"), rational("23") * big_int("-123456789012345678901234567890"))

    assertEquals(rational("0.000"), rational("23.123") * big_int("0"))
    assertEquals(rational("23.123"), rational("23.123") * big_int("1"))
    assertEquals(rational("-23.123"), rational("23.123") * big_int("-1"))
    assertEquals(rational("531.829"), rational("23.123") * big_int("23"))
    assertEquals(rational("-739.936"), rational("23.123") * big_int("-32"))
    assertEquals(rational("2854691332332469133233246913320.470"), rational("23.123") * big_int("123456789012345678901234567890"))
    assertEquals(rational("-2854691332332469133233246913320.470"), rational("23.123") * big_int("-123456789012345678901234567890"))

    assertEquals(rational("0"), rational("-32") * big_int("0"))
    assertEquals(rational("-32"), rational("-32") * big_int("1"))
    assertEquals(rational("32"), rational("-32") * big_int("-1"))
    assertEquals(rational("-736"), rational("-32") * big_int("23"))
    assertEquals(rational("1024"), rational("-32") * big_int("-32"))
    assertEquals(rational("-3950617248395061724839506172480"), rational("-32") * big_int("123456789012345678901234567890"))
    assertEquals(rational("3950617248395061724839506172480"), rational("-32") * big_int("-123456789012345678901234567890"))

    assertEquals(rational("0.000"), rational("-32.456") * big_int("0"))
    assertEquals(rational("-32.456"), rational("-32.456") * big_int("1"))
    assertEquals(rational("32.456"), rational("-32.456") * big_int("-1"))
    assertEquals(rational("-746.488"), rational("-32.456") * big_int("23"))
    assertEquals(rational("1038.592"), rational("-32.456") * big_int("-32"))
    assertEquals(rational("-4006913544184691354418469135437.840"), rational("-32.456") * big_int("123456789012345678901234567890"))
    assertEquals(rational("4006913544184691354418469135437.840"), rational("-32.456") * big_int("-123456789012345678901234567890"))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * big_int("0"))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * big_int("1"))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * big_int("-1"))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * big_int("23"))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("123456789012345678901234567890.123456789") * big_int("-32"))
    assertEquals(rational("15241578753238836750495351562551440366253619878750190519987.501905210"), rational("123456789012345678901234567890.123456789") * big_int("123456789012345678901234567890"))
    assertEquals(rational("-15241578753238836750495351562551440366253619878750190519987.501905210"), rational("123456789012345678901234567890.123456789") * big_int("-123456789012345678901234567890"))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * big_int("0"))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * big_int("1"))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * big_int("-1"))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * big_int("23"))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-123456789012345678901234567890.123456789") * big_int("-32"))
    assertEquals(rational("-15241578753238836750495351562551440366253619878750190519987.501905210"), rational("-123456789012345678901234567890.123456789") * big_int("123456789012345678901234567890"))
    assertEquals(rational("15241578753238836750495351562551440366253619878750190519987.501905210"), rational("-123456789012345678901234567890.123456789") * big_int("-123456789012345678901234567890"))

    assertEquals(Rational, statictypeof(rational("0") * big_int("0")))
  }

  function testRationalRationalMultiplication() {
    assertEquals(rational("0"), rational("0") * rational("0"))
    assertEquals(rational("0"), rational("0") * rational("1"))
    assertEquals(rational("0"), rational("0") * rational("-1"))
    assertEquals(rational("0"), rational("0") * rational("23"))
    assertEquals(rational("0.000"), rational("0") * rational("23.123"))
    assertEquals(rational("0"), rational("0") * rational("-32"))
    assertEquals(rational("0.000"), rational("0") * rational("-32.456"))
    assertEquals(rational("0E-9"), rational("0") * rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("0E-9"), rational("0") * rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("0"), rational("1") * rational("0"))
    assertEquals(rational("1"), rational("1") * rational("1"))
    assertEquals(rational("-1"), rational("1") * rational("-1"))
    assertEquals(rational("23"), rational("1") * rational("23"))
    assertEquals(rational("23.123"), rational("1") * rational("23.123"))
    assertEquals(rational("-32"), rational("1") * rational("-32"))
    assertEquals(rational("-32.456"), rational("1") * rational("-32.456"))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("1") * rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("1") * rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("0"), rational("-1") * rational("0"))
    assertEquals(rational("-1"), rational("-1") * rational("1"))
    assertEquals(rational("1"), rational("-1") * rational("-1"))
    assertEquals(rational("-23"), rational("-1") * rational("23"))
    assertEquals(rational("-23.123"), rational("-1") * rational("23.123"))
    assertEquals(rational("32"), rational("-1") * rational("-32"))
    assertEquals(rational("32.456"), rational("-1") * rational("-32.456"))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-1") * rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-1") * rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("0"), rational("23") * rational("0"))
    assertEquals(rational("23"), rational("23") * rational("1"))
    assertEquals(rational("-23"), rational("23") * rational("-1"))
    assertEquals(rational("529"), rational("23") * rational("23"))
    assertEquals(rational("531.829"), rational("23") * rational("23.123"))
    assertEquals(rational("-736"), rational("23") * rational("-32"))
    assertEquals(rational("-746.488"), rational("23") * rational("-32.456"))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("23") * rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("23") * rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("0.000"), rational("23.123") * rational("0"))
    assertEquals(rational("23.123"), rational("23.123") * rational("1"))
    assertEquals(rational("-23.123"), rational("23.123") * rational("-1"))
    assertEquals(rational("531.829"), rational("23.123") * rational("23"))
    assertEquals(rational("534.673129"), rational("23.123") * rational("23.123"))
    assertEquals(rational("-739.936"), rational("23.123") * rational("-32"))
    assertEquals(rational("-750.480088"), rational("23.123") * rational("-32.456"))
    assertEquals(rational("2854691332332469133233246913323.324691332047"), rational("23.123") * rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("-2854691332332469133233246913323.324691332047"), rational("23.123") * rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("0"), rational("-32") * rational("0"))
    assertEquals(rational("-32"), rational("-32") * rational("1"))
    assertEquals(rational("32"), rational("-32") * rational("-1"))
    assertEquals(rational("-736"), rational("-32") * rational("23"))
    assertEquals(rational("-739.936"), rational("-32") * rational("23.123"))
    assertEquals(rational("1024"), rational("-32") * rational("-32"))
    assertEquals(rational("1038.592"), rational("-32") * rational("-32.456"))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("-32") * rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-32") * rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("0.000"), rational("-32.456") * rational("0"))
    assertEquals(rational("-32.456"), rational("-32.456") * rational("1"))
    assertEquals(rational("32.456"), rational("-32.456") * rational("-1"))
    assertEquals(rational("-746.488"), rational("-32.456") * rational("23"))
    assertEquals(rational("-750.480088"), rational("-32.456") * rational("23.123"))
    assertEquals(rational("1038.592"), rational("-32.456") * rational("-32"))
    assertEquals(rational("1053.391936"), rational("-32.456") * rational("-32.456"))
    assertEquals(rational("-4006913544184691354418469135441.846913543784"), rational("-32.456") * rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("4006913544184691354418469135441.846913543784"), rational("-32.456") * rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("0E-9"), rational("123456789012345678901234567890.123456789") * rational("0"))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * rational("1"))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("123456789012345678901234567890.123456789") * rational("-1"))
    assertEquals(rational("2839506147283950614728395061472.839506147"), rational("123456789012345678901234567890.123456789") * rational("23"))
    assertEquals(rational("2854691332332469133233246913323.324691332047"), rational("123456789012345678901234567890.123456789") * rational("23.123"))
    assertEquals(rational("-3950617248395061724839506172483.950617248"), rational("123456789012345678901234567890.123456789") * rational("-32"))
    assertEquals(rational("-4006913544184691354418469135441.846913543784"), rational("123456789012345678901234567890.123456789") * rational("-32.456"))
    assertEquals(rational("15241578753238836750495351562566681945005334557625361987875.019051998750190521"), rational("123456789012345678901234567890.123456789") * rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("-15241578753238836750495351562566681945005334557625361987875.019051998750190521"), rational("123456789012345678901234567890.123456789") * rational("-123456789012345678901234567890.123456789"))

    assertEquals(rational("0E-9"), rational("-123456789012345678901234567890.123456789") * rational("0"))
    assertEquals(rational("-123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * rational("1"))
    assertEquals(rational("123456789012345678901234567890.123456789"), rational("-123456789012345678901234567890.123456789") * rational("-1"))
    assertEquals(rational("-2839506147283950614728395061472.839506147"), rational("-123456789012345678901234567890.123456789") * rational("23"))
    assertEquals(rational("-2854691332332469133233246913323.324691332047"), rational("-123456789012345678901234567890.123456789") * rational("23.123"))
    assertEquals(rational("3950617248395061724839506172483.950617248"), rational("-123456789012345678901234567890.123456789") * rational("-32"))
    assertEquals(rational("4006913544184691354418469135441.846913543784"), rational("-123456789012345678901234567890.123456789") * rational("-32.456"))
    assertEquals(rational("-15241578753238836750495351562566681945005334557625361987875.019051998750190521"), rational("-123456789012345678901234567890.123456789") * rational("123456789012345678901234567890.123456789"))
    assertEquals(rational("15241578753238836750495351562566681945005334557625361987875.019051998750190521"), rational("-123456789012345678901234567890.123456789") * rational("-123456789012345678901234567890.123456789"))

    assertEquals(Rational, statictypeof(rational("0") * rational("0")))
  }

}

