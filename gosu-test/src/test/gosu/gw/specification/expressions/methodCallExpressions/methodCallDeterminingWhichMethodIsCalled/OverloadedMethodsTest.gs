package gw.specification.expressions.methodCallExpressions.methodCallDeterminingWhichMethodIsCalled

uses gw.BaseVerifyErrantTest
uses java.lang.*
uses gw.specification.types.signaturesAndSubsumption.*

class OverloadedMethodsTest extends BaseVerifyErrantTest {
  function testErrant_OverloadedCallsTest() {
    processErrantType(Errant_OverloadedCallsTest)
  }

  function testCallsWithPrimitives() {
    var res : int

    var a = new GA()
    res = a.m(1.0, 1.0)
    assertTrue(res == 0)
    res = a.m(1.0, 1)
    assertTrue(res == 1)
    res = a.m(1, 1.0)
    assertTrue(res == 2)
    res = a.m(1, 1)
    assertTrue(res == 3)


    var b = new GB()
    res = b.m(1.0, 1)
    assertTrue(res == 1)
    res = b.m(1, 1)
    assertTrue(res == 3)

    var c = new GC()
    res = c.m(1, 1.0)
    assertTrue(res == 2)
    res = c.m(1, 1)
    assertTrue(res == 3)

    var d = new GD()
    res = d.m(1.0, 1)
    assertTrue(res == 1)
    res = d.m(1, 1.0)
    assertTrue(res == 2)

    var e = new GE()
    res = e.m(1.0, 1)
    assertTrue(res == 1)
    res = e.m(1, 1.0)
    assertTrue(res == 2)
    res = e.m(1, 1)
    assertTrue(res == 3)

    var f = new GF()
    res = f.m(1.0, 1.0)
    assertTrue(res == 0)
    res = f.m(1.0, 1)
    assertTrue(res == 0)
    res = f.m(1, 1.0)
    assertTrue(res == 0)
    res = f.m(1, 1)
    assertTrue(res == 3)

    var g = new GG()
    res = g.m(1.0, 1.0)
    assertTrue(res == 0)
    res = g.m(1.0, 1)
    assertTrue(res == 0)
    res = g.m(1, 1.0)
    assertTrue(res == 2)
    res = g.m(1, 1)
    assertTrue(res == 2)

    var h = new GH()
    res = h.m(1.0, 1.0)
    assertTrue(res == 0)
    res = h.m(1.0, 1)
    assertTrue(res == 0)
    res = h.m(1, 1.0)
    assertTrue(res == 2)
    res = h.m(1, 1)
    assertTrue(res == 3)

    var i = new GI()
    res = i.m(1.0, 1.0)
    assertTrue(res == 0)
    res = i.m(1.0, 1)
    assertTrue(res == 1)
    res = i.m(1, 1.0)
    assertTrue(res == 0)
    res = i.m(1, 1)
    assertTrue(res == 1)

    var j = new GJ()
    res = j.m(1.0, 1.0)
    assertTrue(res == 0)
    res = j.m(1.0, 1)
    assertTrue(res == 1)
    res = j.m(1, 1.0)
    assertTrue(res == 0)
    res = j.m(1, 1)
    assertTrue(res == 3)

    var k = new GK()
    res = k.m(1.0, 1.0)
    assertTrue(res == 0)
    res = k.m(1.0, 1)
    assertTrue(res == 1)
    res = k.m(1, 1.0)
    assertTrue(res == 2)

    var l = new GL()
    res = l.m(true as int)
    assertTrue(res == 0)
    res = l.m(true as long)
    assertTrue(res == 1)
    res = l.m('1' as int)
    assertTrue(res == 0)
    res = l.m('1' as long)
    assertTrue(res == 1)
    res = l.m(1 as byte)
    assertTrue(res == 0)
    res = l.m(1b)
    assertTrue(res == 0)
    res = l.m(1 as short)
    assertTrue(res == 0)
    res = l.m(1 as short)
    assertTrue(res == 0)
    res = l.m(1 as int)
    assertTrue(res == 0)
    res = l.m(1)
    assertTrue(res == 0)
    res = l.m(1 as long)
    assertTrue(res == 1)
    res = l.m(1L)
    assertTrue(res == 1)
    res = l.m(1.0f as int)
    assertTrue(res == 0)
    res = l.m(1.0f as long)
    assertTrue(res == 1)
    res = l.m(1.0 as int)
    assertTrue(res == 0)
    res = l.m(1.0 as long)
    assertTrue(res == 1)
  }

  function testCallsWithObjs() {
    var res : int

    var a = new GAObj()
    res = a.m(new GAnimal(), new GAnimal())
    assertTrue(res == 0)
    res = a.m(new GAnimal(), new GDog())
    assertTrue(res == 1)
    res = a.m(new GDog(), new GAnimal())
    assertTrue(res == 2)
    res = a.m(new GDog(), new GDog())
    assertTrue(res == 3)

    var b = new GBObj()
    res = b.m(new GAnimal(), new GDog())
    assertTrue(res == 1)
    res = b.m(new GDog(), new GDog())
    assertTrue(res == 3)

    var c = new GCObj()
    res = c.m(new GDog(), new GAnimal())
    assertTrue(res == 2)
    res = c.m(new GDog(), new GDog())
    assertTrue(res == 3)

    var d = new GDObj()
    res = d.m(new GAnimal(), new GDog())
    assertTrue(res == 1)
    res = d.m(new GDog(), new GAnimal())
    assertTrue(res == 2)

    var e = new GEObj()
    res = e.m(new GAnimal(), new GDog())
    assertTrue(res == 1)
    res = e.m(new GDog(), new GAnimal())
    assertTrue(res == 2)
    res = e.m(new GDog(), new GDog())
    assertTrue(res == 3)

    var f = new GFObj()
    res = f.m(new GAnimal(), new GAnimal())
    assertTrue(res == 0)
    res = f.m(new GAnimal(), new GDog())
    assertTrue(res == 0)
    res = f.m(new GDog(), new GAnimal())
    assertTrue(res == 0)
    res = f.m(new GDog(), new GDog())
    assertTrue(res == 3)

    var g = new GGObj()
    res = g.m(new GAnimal(), new GAnimal())
    assertTrue(res == 0)
    res = g.m(new GAnimal(), new GDog())
    assertTrue(res == 0)
    res = g.m(new GDog(), new GAnimal())
    assertTrue(res == 2)
    res = g.m(new GDog(), new GDog())
    assertTrue(res == 2)

    var h = new GHObj()
    res = h.m(new GAnimal(), new GAnimal())
    assertTrue(res == 0)
    res = h.m(new GAnimal(), new GDog())
    assertTrue(res == 0)
    res = h.m(new GDog(), new GAnimal())
    assertTrue(res == 2)
    res = h.m(new GDog(), new GDog())
    assertTrue(res == 3)

    var i = new GIObj()
    res = i.m(new GAnimal(), new GAnimal())
    assertTrue(res == 0)
    res = i.m(new GAnimal(), new GDog())
    assertTrue(res == 1)
    res = i.m(new GDog(), new GAnimal())
    assertTrue(res == 0)
    res = i.m(new GDog(), new GDog())
    assertTrue(res == 1)

    var j = new GJObj()
    res = j.m(new GAnimal(), new GAnimal())
    assertTrue(res == 0)
    res = j.m(new GAnimal(), new GDog())
    assertTrue(res == 1)
    res = j.m(new GDog(), new GAnimal())
    assertTrue(res == 0)
    res = j.m(new GDog(), new GDog())
    assertTrue(res == 3)

    var k = new GKObj()
    res = k.m(new GAnimal(), new GAnimal())
    assertTrue(res == 0)
    res = k.m(new GAnimal(), new GDog())
    assertTrue(res == 1)
    res = k.m(new GDog(), new GAnimal())
    assertTrue(res == 2)

  }
}
