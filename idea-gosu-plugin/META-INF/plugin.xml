<idea-plugin version="2">
    <name>Gosu</name>
    <id>com.guidewire.gosu</id>
    <description><![CDATA[
    IntelliJ IDEA plugin for the Gosu programming language.
    <p>
    Version ${project.version}
    <p>
    The plugin enables you to:
    <ul>
    <li> Create Gosu classes, programs, etc.
    <li> Syntax highlighting and error highlighting
    <li> Go to Declaration (including Quick Definition lookup);
    <li> Code completion
    <li> Parameter information
    <li> Find Usages
    <li> Rename and Move refactorings
    <li> Code formatter
    <li> Code inspections and intentions
    <li> Structure View (including the File Structure Popup)
    <li> Hierarchy view
    <li> Go to Class, Go to Symbol
    <li> Brace matching
    <li> Code folding
    <li> Javadoc
    <li> Launch Gosu programs directly via IJ run configurations
    <li> Debug Gosu
    <li> JUnit integration
    <li> Gosu scratchpad
    <li> Incremental Gosu compiler
    <li> Custom typeloader support
    <li> Hyperlink to Gosu from stack traces
    </ul>
  ]]></description>
    <version>3.6.1-SNAPSHOT</version>
    <version>${project.version}</version>
    <vendor email="gosu-lang@googlegroups.com" url="http://gosu-lang.org">Guidewire Software</vendor>
    <idea-version since-build="123.72"/>

    <application-components>
        <component>
            <implementation-class>gw.plugin.ij.core.GosuAppComponent</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>gw.plugin.ij.core.GosuProjectComponent</implementation-class>
        </component>
        <component>
            <implementation-class>gw.plugin.ij.compiler.GosuCompilerMonitor</implementation-class>
        </component>
    </project-components>

    <actions>
        <group id="Gosu.New">
            <action id="Gosu.NewClass" class="gw.plugin.ij.actions.CreateClassAction"/>
            <action id="Gosu.NewProgram" class="gw.plugin.ij.actions.CreateProgramAction"/>
            <action id="Gosu.NewEnhancement" class="gw.plugin.ij.actions.CreateEnhancementAction"/>
            <action id="Gosu.NewTemplate" class="gw.plugin.ij.actions.CreateTemplateAction"/>
            <separator/>
            <add-to-group group-id="NewGroup" anchor="first"/>
        </group>

        <group id="Gosu.Tools">
            <action id="Gosu.TypeInfo" class="gw.plugin.ij.typeinfo.TypeInfoAction">
                <keyboard-shortcut first-keystroke="control shift G" keymap="$default"/>
            </action>
        </group>
      <group id="Gosu.Paste">
        <action id="Gosu.PastAsGosu" class="gw.plugin.ij.actions.PasteAsGosuAction">
          <add-to-group group-id="EditorPopupMenu" relative-to-action="$Paste" anchor="after"/>
        </action>
      </group>
        <group id="Gosu.Scratchpad.Group">
            <separator/>
            <action id="Gosu.Scratchpad" class="gw.plugin.ij.typeinfo.GosuScratchpadAction" icon="/gw/plugin/ij/icons/Scratchpad.png">
                <keyboard-shortcut first-keystroke="alt shift S" keymap="$default"/>
            </action>
            <separator/>
            <add-to-group group-id="MainToolBar" anchor="before" relative-to-action="ShowSettings"/>
            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </group>
    </actions>

  <extensions defaultExtensionNs="com.intellij">
        <ApplicationLoadListener implementation="gw.plugin.ij.core.GosuApplicationStarter"/>
        <appStarter implementation="gw.plugin.ij.core.GosuApplicationStarter"/>
        <stubElementTypeHolder class="gw.plugin.ij.lang.parser.GosuElementTypes"/>

        <!--syntax highlighter-->
        <syntaxHighlighter key="GosuCode" implementationClass="gw.plugin.ij.highlighter.GosuCodeFileHighlighter"/>
        <syntaxHighlighter key="GosuTemplate" implementationClass="gw.plugin.ij.highlighter.GosuTemplateFileHighlighter"/>
        <lang.syntaxHighlighterFactory key="Gosu" implementationClass="gw.plugin.ij.highlighter.GosuSyntaxHighlighterFactory"/>
        <annotator language="Gosu" implementationClass="gw.plugin.ij.annotator.GosuSemanticAnnotator"/>
        <annotator language="Gosu" implementationClass="gw.plugin.ij.lang.parser.GosuParserAnnotator"/>
        <problemFileHighlightFilter implementation="gw.plugin.ij.lang.parser.GosuParserAnnotator"/>

        <!--Stubs index-->
        <stubIndex implementation="gw.plugin.ij.lang.psi.stubs.index.GosuFieldNameIndex"/>
        <stubIndex implementation="gw.plugin.ij.lang.psi.stubs.index.GosuMethodNameIndex"/>
        <stubIndex implementation="gw.plugin.ij.lang.psi.stubs.index.GosuAnnotatedMemberIndex"/>
        <stubIndex implementation="gw.plugin.ij.lang.psi.stubs.index.GosuClassNameIndex"/>
        <stubIndex implementation="gw.plugin.ij.lang.psi.stubs.index.GosuDirectInheritorsIndex"/>
        <stubIndex implementation="gw.plugin.ij.lang.psi.stubs.index.GosuAnonymousClassIndex"/>
        <stubIndex implementation="gw.plugin.ij.lang.psi.stubs.index.GosuShortClassNameIndex"/>

        <!--find usages -->
        <lang.findUsagesProvider language="Java" implementationClass="gw.plugin.ij.usages.GosuFindUsagesProvider"/>
        <lang.findUsagesProvider language="Gosu" implementationClass="gw.plugin.ij.usages.GosuFindUsagesProvider"/>
        <usageTypeProvider implementation="gw.plugin.ij.usages.GosuUsageTypeProvider"/>
        <fileStructureGroupRuleProvider order="last" implementation="gw.plugin.ij.usages.GosuMethodGroupRuleProvider"/>
        <aliasingPsiTargetMapper implementation="gw.plugin.ij.usages.GosuAliasingPsiTargetMapper"/>
        <pom.declarationSearcher implementation="gw.plugin.ij.usages.GosuDeclarationSearcher"/>
        <implicitUsageProvider implementation="gw.plugin.ij.lang.psi.GosuImplicitUsageProvider"/>
        <allOverridingMethodsSearch implementation="gw.plugin.ij.lang.psi.impl.search.GosuAllOverridingMethodsSearcher"/>
        <overridingMethodsSearch implementation="gw.plugin.ij.lang.psi.impl.search.GosuOverridingMethodsSearcher"/>
        <superMethodsSearch implementation="gw.plugin.ij.lang.psi.impl.search.GosuMethodSuperSearcher"/>
        <useScopeEnlarger implementation="gw.plugin.ij.lang.psi.impl.search.NamedParametersScopeEnlarger"/>

        <!--refactoring-->
        <refactoring.moveMemberHandler language="Gosu" implementationClass="gw.plugin.ij.refactor.MoveGosuMemberHandler"/>
        <statementUpDownMover implementation="gw.plugin.ij.actions.GosuStatementMover" order="first"/>
        <refactoring.moveInnerHandler language="Gosu" implementationClass="gw.plugin.ij.refactor.MoveGosuInnerHandler"/>
        <refactoring.moveClassHandler implementation="gw.plugin.ij.refactor.MoveGosuClassHandler" order="first"/>
        <lang.refactoringSupport language="Gosu" implementationClass="gw.plugin.ij.refactor.GosuRefactoringSupportProvider"/>
        <refactoring.changeSignatureUsageProcessor
                implementation="gw.plugin.ij.refactor.signature.GosuChangeSignatureUsageProcessor"
                order="first" />
        <refactoring.safeDeleteProcessor implementation="gw.plugin.ij.refactor.GosuSafeDeleteProcessor" id="gosuProcessor" order="first"/>
        <renamePsiElementProcessor implementation="gw.plugin.ij.refactor.GosuRenameClassProcessor" order="first"/>
		<renameHandler implementation="gw.plugin.ij.refactor.GosuMemberInplaceRenameHandler"/>
        <inlineActionHandler implementation = "gw.plugin.ij.refactor.inline.GosuInlineLocalHandler" order="first"/>

        <!--various -->
        <lang.parserDefinition language="Gosu" implementationClass="gw.plugin.ij.lang.parser.GosuCodeParserDefinition"/>
        <typedHandler implementation="gw.plugin.ij.completion.GosuTypedActionHandler" order="first"/>
        <completion.contributor language="Gosu" implementationClass="gw.plugin.ij.completion.GosuCompletionContributor" id="gosuBasic"/>
        <completion.confidence language="Gosu" implementationClass="gw.plugin.ij.completion.GosuCompletionConfidence" id="gosuNameIdentifier"/>
        <!--<findUsagesHandlerFactory implementation="gw.plugin.ij.refactor.GosuFindUsagesHandlerFactory" order="first"/>-->
        <treeCopyHandler implementation="gw.plugin.ij.refactor.GosuTreeCopyHandler"/>

        <lang.foldingBuilder language="Gosu" implementationClass="gw.plugin.ij.folding.GosuFoldingBuilder"/>
        <liveTemplateContext implementation="gw.plugin.ij.livetemplate.GosuCodeLiveTemplateContextType"/>
        <lang.documentationProvider language="Gosu" implementationClass="gw.plugin.ij.doc.GosuDocumentationProvider"/>
        <lang.documentationProvider language="Properties" implementationClass="gw.plugin.ij.doc.EscapingQuickNavigateInfoProvider" order="first"/>

        <sourceRootFinder implementation="gw.plugin.ij.core.GosuSourceRootFinder"/>
        <lang.commenter language="Gosu" implementationClass="gw.plugin.ij.commenting.GosuCommenter"/>
        <lang.commenter language="GosuTemplate" implementationClass="gw.plugin.ij.commenting.GosuCommenter"/>
        <lang.psiStructureViewFactory language="Gosu" implementationClass="gw.plugin.ij.structure.GosuStructureViewFactory"/>
        <java.shortNamesCache implementation="gw.plugin.ij.lang.psi.stubs.GosuShortNamesCache"/>

        <typeHierarchyProvider language="Gosu"
                               implementationClass="gw.plugin.ij.typehierarchy.GosuTypeHierarchyProvider"/>
        <callHierarchyProvider language="Gosu"
                               implementationClass="gw.plugin.ij.callhierarchy.GosuCallHierarchyProvider"/>
        <methodHierarchyProvider language="Gosu"
                                 implementationClass="gw.plugin.ij.typehierarchy.GosuMethodHierarchyProvider"/>

        <createFromTemplateHandler implementation="gw.plugin.ij.filetemplates.GosuCreateFromTemplateHandler"/>

        <!--<lang.psiAugmentProvider implementation="gw.plugin.ij.core.GosuAugmentProvider"/>-->

        <lang.formatter language="Gosu" implementationClass="gw.plugin.ij.formatting.GosuFormattingModelBuilder"/>
        <lang.importOptimizer language="Gosu" implementationClass="gw.plugin.ij.intentions.GosuImportOptimizer"/>
        <!--fileTypeIndentOptionsProvider implementation="gw.plugin.ij.formatting.GosuFileTypeIndentOptionsProvider"/-->

        <codeInsight.parameterInfo language="Gosu" implementationClass="gw.plugin.ij.parameterinfo.GosuParameterInfoHandler"/>
        <codeInsight.parameterInfo language="Gosu" implementationClass="gw.plugin.ij.parameterinfo.GosuAnnotationParameterInfoHandler"/>
        <codeInsight.parameterInfo language="Gosu" implementationClass="gw.plugin.ij.parameterinfo.GosuBlockParameterInfoHandler"/>
        <codeInsight.implementMethod language="Gosu" implementationClass="gw.plugin.ij.codeInsight.GosuImplementMethodHandler"/>
        <codeInsight.overrideMethod language="Gosu" implementationClass="gw.plugin.ij.codeInsight.GosuOverrideMethodHandler"/>
        <codeInsight.lineMarkerProvider language="Gosu" implementationClass="gw.plugin.ij.codeInsight.GosuLineMarkerProvider"/>

        <localInspection language="Gosu" groupPath="Gosu" shortName="GosuCaseMismatchReference" enabledByDefault="false"
                       key="inspection.case.mismatch.reference.plain"
                       groupKey="inspection.group.name.case.mismatch.issues"
                       bundle="messages.Gosu"
                       level="ERROR"
                       implementationClass="gw.plugin.ij.codeInspection.expression.GosuCaseMismatchReferenceInspection"/>
        <localInspection language="Gosu" groupPath="Gosu" shortName="GosuEqualityInspection" enabledByDefault="false"
                       key="inspection.equality.obsolete.operator"
                       groupKey="inspection.group.name.equality.issues"
                       bundle="messages.Gosu"
                       level="ERROR"
                       implementationClass="gw.plugin.ij.codeInspection.expression.GosuEqualityInspection"/>
        <localInspection language="Gosu" groupPath="Gosu" shortName="GosuUpgradeToAssertStatementInspection" enabledByDefault="false"
                       key="inspection.assert.is.reserved"
                       groupKey="inspection.group.name.upgrade.issues"
                       bundle="messages.Gosu"
                       level="ERROR"
                       implementationClass="gw.plugin.ij.codeInspection.expression.GosuUpgradeToAssertStatementInspection"/>
       <localInspection language="Gosu" groupPath="Gosu" shortName="GosuIterableInspection" enabledByDefault="false"
                       key="inspection.expecting.iterable"
                       groupKey="inspection.group.name.upgrade.issues"
                       bundle="messages.Gosu"
                       level="ERROR"
                       implementationClass="gw.plugin.ij.codeInspection.expression.GosuIterableInspection"/>
       <localInspection language="Gosu" groupPath="Gosu" shortName="GosuAmbiguousMethodCallInspection" enabledByDefault="false"
                       key="inspection.ambiguous.call"
                       groupKey="inspection.group.name.upgrade.issues"
                       bundle="messages.Gosu"
                       level="ERROR"
                       implementationClass="gw.plugin.ij.codeInspection.method.GosuAmbiguousMethodCallInspection"/>
       <localInspection language="Gosu" groupPath="Gosu" shortName="GosuInferTypeInDeclaration" enabledByDefault="true"
                       key="inspection.variable.type.inferred"
                       groupKey="inspection.group.name.declaration.issues"
                       bundle="messages.Gosu"
                       level="WARNING"
                       implementationClass="gw.plugin.ij.codeInspection.declaration.GosuInferTypeInDeclarationInspection"/>
       <localInspection language="Gosu" groupPath="Gosu" shortName="GosuMethodAsPropertyInspection" enabledByDefault="true"
                       key="inspection.method.as.property"
                       groupKey="inspection.group.name.method.issues"
                       bundle="messages.Gosu"
                       level="WARNING"
                       implementationClass="gw.plugin.ij.codeInspection.method.GosuMethodAsPropertyInspection"/>
       <localInspection language="Gosu" groupPath="Gosu" shortName="NewExpressionAsBlockInspection" enabledByDefault="true"
                       key="inspection.expression.as.block"
                       groupKey="inspection.group.name.expression.issues"
                       bundle="messages.Gosu"
                       level="WARNING"
                       implementationClass="gw.plugin.ij.codeInspection.expression.NewExpressionAsBlockInspection"/>
       <localInspection language="Gosu" groupPath="Gosu" shortName="GosuObjectEqualsInspection" enabledByDefault="true"
                       key="inspection.object.equals.as.op"
                       groupKey="inspection.group.name.expression.issues"
                       bundle="messages.Gosu"
                       level="WARNING"
                       implementationClass="gw.plugin.ij.codeInspection.expression.GosuObjectEqualsInspection"/>
       <localInspection language="Gosu" groupPath="Gosu" shortName="GosuWhileToForInspection" enabledByDefault="true"
                       key="inspection.while.to.for"
                       groupKey="inspection.group.name.statement.issues"
                       bundle="messages.Gosu"
                       level="WARNING"
                       implementationClass="gw.plugin.ij.codeInspection.statement.GosuWhileToForInspection"/>

      <!-- plugs into automatic method generation (e.g. quick fix) but bugs in IJ and Gosu psi tree incompatibilities prevent it's use by us-->
        <!-- <methodImplementor implementation="gw.plugin.ij.codeInsight.generation.GosuMethodImplementor"/> -->

        <moduleType id="GOSU_MODULE" implementationClass="gw.plugin.ij.project.GosuModuleType" classpathProvider="true"/>

        <!--program runner-->
        <configurationType implementation="gw.plugin.ij.runner.GosuProgramRunConfigurationType"/>

        <!--debugger-->
        <!--see also: GosuPositionManager-->
        <debuggerClassFilterProvider implementation="gw.plugin.ij.debugger.GosuDebuggerClassFilterProvider"/>
        <debugger.positionManagerFactory implementation="gw.plugin.ij.debugger.GosuPositionManagerFactory"/>
        <debugger.jvmSmartStepIntoHandler implementation="gw.plugin.ij.debugger.actions.GosuSmartStepIntoHandler"/>
        <debugger.codeFragmentFactory implementation="gw.plugin.ij.debugger.evaluation.GosuCodeFragmentFactory"/>
        <debuggerEditorTextProvider language="Gosu" implementationClass="gw.plugin.ij.debugger.GosuEditorTextProvider"/>

        <constantExpressionEvaluator language="Gosu" implementationClass="gw.plugin.ij.lang.psi.GosuConstantExpressionEvaluator"/>

        <lang.fileViewProviderFactory language="Gosu" implementationClass="gw.plugin.ij.view.GosuFileViewProviderFactory"/>

        <directClassInheritorsSearch implementation="gw.plugin.ij.lang.psi.impl.GosuDirectInheritorSearcher"/>

        <sdkType implementation="gw.plugin.ij.sdk.GosuSdkType"/>

        <quoteHandler fileType="GosuCode" className="gw.plugin.ij.formatting.GosuQuoteHandler"/>
        <quoteHandler fileType="GosuTempalte" className="gw.plugin.ij.formatting.GosuQuoteHandler"/>

        <colorSettingsPage implementation="gw.plugin.ij.highlighter.GosuColorsAndFontsPage"/>

        <langCodeStyleSettingsProvider implementation="gw.plugin.ij.formatting.GosuLanguageCodeStyleSettingsProvider"/>
        <fileTypeFactory implementation="gw.plugin.ij.filetypes.GosuFileTypeFactory"/>
        <codeStyleSettingsProvider implementation="gw.plugin.ij.formatting.GosuCodeStyleSettingsProvider"/>
        <iconProvider implementation="gw.plugin.ij.filetypes.GosuIconProvider"/>
        <declarationRangeHandler key="gw.plugin.ij.lang.psi.impl.statements.GosuVariableImpl" implementationClass="gw.plugin.ij.lang.GosuVariableRangeHandler"/>

        <writingAccessProvider implementation="gw.plugin.ij.util.DependentFilesAccessProvider"/>

        <commentCompleteHandler implementation="gw.plugin.ij.commenting.GosuCommentCompleteHandler"/>

      <!--External Compiler Settings-->
      <applicationService serviceInterface="gw.plugin.ij.compiler.CompilerSettings"
                          serviceImplementation="gw.plugin.ij.compiler.CompilerSettings"/>

      <extendWordSelectionHandler implementation="gw.plugin.ij.actions.GosuWordSelectioner"/>
      <filePasteProvider implementation="gw.plugin.ij.actions.GosuFilePasteProvider" order="first" />
    </extensions>


    <!--Studio and Editor extension point -->
    <extensionPoints>
        <extensionPoint name="gosuFileTypeProvider" beanClass="gw.plugin.ij.filetypes.GosuFileTypeExtensionBean"/>
        <extensionPoint name="typesystemStartupContributor" beanClass="gw.plugin.ij.core.TypeSystemStartupContributorExtensionBean"/>
        <extensionPoint name="fileListener" beanClass="gw.plugin.ij.core.FileListenerExtensionBean"/>
        <extensionPoint name="gosuParserConfigurer" beanClass="gw.plugin.ij.lang.psi.impl.GosuParserConfigurerExtensionBean"/>
        <extensionPoint name="typeResolver" beanClass="gw.plugin.ij.lang.psi.impl.resolvers.TypeResolverExtensionBean"/>
        <extensionPoint name="fileShadowingResolver" beanClass="gw.plugin.ij.lang.psi.impl.resolvers.FileShadowingResolverExtensionBean"/>
        <extensionPoint name="featureResolver" beanClass="gw.plugin.ij.lang.psi.impl.resolvers.FeatureResolverExtensionBean"/>
        <extensionPoint name="compilerParser" beanClass="gw.plugin.ij.compiler.parser.CompilerParserExtensionBean"/>
        <extensionPoint name="sdkCreator" beanClass="gw.plugin.ij.sdk.SDKCreatorExtensionBean"/>
        <extensionPoint name="quickFixProvider" beanClass="gw.plugin.ij.intentions.QuickFixProviderExtensionBean"/>
        <extensionPoint name="fieldTypeResolver" beanClass="gw.plugin.ij.util.ClassNameExtensionBean"/>
        <extensionPoint name="completionFilter" beanClass="gw.plugin.ij.completion.handlers.filter.CompletionFilterExtensionPointBean" />
    </extensionPoints>

    <extensions defaultExtensionNs="com.guidewire.gosu">
        <sdkCreator class="gw.plugin.ij.sdk.DefaultGosuSDKCreator"/>

        <!--Editor gosu file types extensions -->
        <gosuFileTypeProvider extension="gs" provider="gw.plugin.ij.filetypes.GosuClassFileProvider"/>
        <gosuFileTypeProvider extension="gsx" provider="gw.plugin.ij.filetypes.GosuEnhancementFileProvider"/>
        <gosuFileTypeProvider extension="gsp" provider="gw.plugin.ij.filetypes.GosuProgramFileProvider"/>
        <gosuFileTypeProvider extension="gst" provider="gw.plugin.ij.filetypes.GosuTemplateFileProvider"/>

        <typeResolver class="gw.plugin.ij.lang.psi.impl.resolvers.DefaultTypeResolver"/>
        <typeResolver class="gw.plugin.ij.lang.psi.impl.resolvers.FileBasedTypeResolver"/>

        <featureResolver class="gw.plugin.ij.lang.psi.impl.resolvers.GosuFeatureResolver"/>
        <featureResolver class="gw.plugin.ij.lang.psi.impl.resolvers.PropertiesFeatureResolver"/>
        <featureResolver class="gw.plugin.ij.lang.psi.impl.resolvers.GosuMethodResolver"/>
        <featureResolver class="gw.plugin.ij.lang.psi.impl.resolvers.LocationAwareFeatureResolver"/>
        <featureResolver class="gw.plugin.ij.lang.psi.impl.resolvers.ShadowedFeatureResolver" order="last"/>
        <featureResolver class="gw.plugin.ij.lang.psi.impl.resolvers.CatchAllFeatureResolver" order="last"/>

        <compilerParser class="gw.plugin.ij.compiler.parser.GosuClassCompilerParser"/>
        <compilerParser class="gw.plugin.ij.compiler.parser.JavaCompilerParser"/>

        <gosuParserConfigurer class="gw.plugin.ij.lang.psi.impl.InjectionGosuParserConfigurer"/>

        <fileListener class="gw.plugin.ij.core.TypeSystemRefreshListener"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
      <filetype.stubBuilder filetype="CLASS" implementationClass="gw.plugin.ij.lang.psi.impl.ClassFileStubBuilderWrapper" order="first"/>
    </extensions>
</idea-plugin>
